/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SafeERC20, SafeERC20Interface } from "../SafeERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "IERC20",
      },
    ],
    name: "safeDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610354610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806372a58ae11461003a575b600080fd5b610054600480360381019061004f9190610185565b61006a565b6040516100619190610236565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040516024016040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516100df919061021f565b600060405180830381855afa9150503d806000811461011a576040519150601f19603f3d011682016040523d82523d6000602084013e61011f565b606091505b5091509150818015610132575060208151145b61013d576012610152565b8080602001905181019061015191906101b2565b5b92505050919050565b60008135905061016a816102f0565b92915050565b60008151905061017f81610307565b92915050565b60006020828403121561019b5761019a6102eb565b5b60006101a98482850161015b565b91505092915050565b6000602082840312156101c8576101c76102eb565b5b60006101d684828501610170565b91505092915050565b60006101ea82610251565b6101f4818561025c565b93506102048185602086016102b8565b80840191505092915050565b610219816102ab565b82525050565b600061022b82846101df565b915081905092915050565b600060208201905061024b6000830184610210565b92915050565b600081519050919050565b600081905092915050565b60006102728261028b565b9050919050565b600061028482610267565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b60005b838110156102d65780820151818401526020810190506102bb565b838111156102e5576000848401525b50505050565b600080fd5b6102f981610279565b811461030457600080fd5b50565b610310816102ab565b811461031b57600080fd5b5056fea2646970667358221220298b53c153a754ea649b19e0942a03538be569f6b02d8078550dac202a352d2a64736f6c63430008070033";

type SafeERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeERC20__factory extends ContractFactory {
  constructor(...args: SafeERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SafeERC20";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SafeERC20> {
    return super.deploy(overrides || {}) as Promise<SafeERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafeERC20 {
    return super.attach(address) as SafeERC20;
  }
  connect(signer: Signer): SafeERC20__factory {
    return super.connect(signer) as SafeERC20__factory;
  }
  static readonly contractName: "SafeERC20";
  public readonly contractName: "SafeERC20";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeERC20Interface {
    return new utils.Interface(_abi) as SafeERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeERC20 {
    return new Contract(address, _abi, signerOrProvider) as SafeERC20;
  }
}
