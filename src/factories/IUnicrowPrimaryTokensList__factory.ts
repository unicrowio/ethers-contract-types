/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IUnicrowPrimaryTokensList,
  IUnicrowPrimaryTokensListInterface,
} from "../IUnicrowPrimaryTokensList";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "removeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "governance",
        type: "address",
      },
    ],
    name: "updateGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IUnicrowPrimaryTokensList__factory {
  static readonly abi = _abi;
  static createInterface(): IUnicrowPrimaryTokensListInterface {
    return new utils.Interface(_abi) as IUnicrowPrimaryTokensListInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUnicrowPrimaryTokensList {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IUnicrowPrimaryTokensList;
  }
}
