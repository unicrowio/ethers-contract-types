/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  UnicrowClaim,
  UnicrowClaimInterface,
} from "../../contracts/UnicrowClaim";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "unicrow_",
        type: "address",
      },
      {
        internalType: "address",
        name: "unicrowArbitrator_",
        type: "address",
      },
      {
        internalType: "address",
        name: "protocolFeeAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "escrowId",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "amount",
            type: "uint256[5]",
          },
        ],
        indexed: false,
        internalType: "struct UnicrowClaim.ClaimEvent",
        name: "escrow",
        type: "tuple",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "escrowId",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "amount",
            type: "uint256[5]",
          },
        ],
        indexed: false,
        internalType: "struct UnicrowClaim.ClaimEvent[]",
        name: "escrows",
        type: "tuple[]",
      },
    ],
    name: "ClaimMultiple",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256[5]",
        name: "",
        type: "uint256[5]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "escrows",
        type: "uint256[]",
      },
    ],
    name: "claimMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "crowRewards",
    outputs: [
      {
        internalType: "contract IUnicrowClaimRewards",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingRewards",
    outputs: [
      {
        internalType: "contract IUnicrowStakingRewards",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unicrow",
    outputs: [
      {
        internalType: "contract Unicrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unicrowArbitrator",
    outputs: [
      {
        internalType: "contract UnicrowArbitrator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "crowRewards_",
        type: "address",
      },
    ],
    name: "updateCrowRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "protocolFeeAddress_",
        type: "address",
      },
    ],
    name: "updateProtocolFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingRewards_",
        type: "address",
      },
    ],
    name: "updateStakingRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001ca938038062001ca9833981016040819052620000349162000097565b6001600055606092831b6001600160601b03199081166080529190921b1660a052600380546001600160a01b0319166001600160a01b03909216919091179055620000e1565b80516001600160a01b03811681146200009257600080fd5b919050565b600080600060608486031215620000ad57600080fd5b620000b8846200007a565b9250620000c8602085016200007a565b9150620000d8604085016200007a565b90509250925092565b60805160601c60a05160601c611b50620001596000396000818160f101528181610332015281816109060152610ede0152600081816101580152818161026f015281816106af0152818161084801528181610cde01528181610dbb0152818161100d0152818161125901526112ea0152611b506000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80639051cce911610076578063a76b8fb71161005b578063a76b8fb7146101a0578063cce516b7146101b3578063eeca9a31146101c657600080fd5b80639051cce91461017a57806394417bce1461018d57600080fd5b80634cb6995a116100a75780634cb6995a1461012b57806364b87a70146101405780636e4e29341461015357600080fd5b8063379607f5146100c357806349c4920f146100ec575b600080fd5b6100d66100d13660046118f6565b6101d9565b6040516100e391906119d6565b60405180910390f35b6101137f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e3565b61013e6101393660046115f8565b6106ad565b005b600254610113906001600160a01b031681565b6101137f000000000000000000000000000000000000000000000000000000000000000081565b61013e6101883660046116bc565b61078a565b600154610113906001600160a01b031681565b61013e6101ae3660046115f8565b610cdc565b600354610113906001600160a01b031681565b61013e6101d43660046115f8565b610db9565b6101e16113de565b600260005414156102395760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260009081556040517f7d19e596000000000000000000000000000000000000000000000000000000008152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637d19e5969060240160006040518083038186803b1580156102b957600080fd5b505afa1580156102cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102f591908101906117c1565b6040517f16e0551b000000000000000000000000000000000000000000000000000000008152600481018590529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906316e0551b9060240160a06040518083038186803b15801561037457600080fd5b505afa158015610388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ac9190611731565b905081610100015161ffff166000146103ef5760405162461bcd60e51b8152602060048201526005602482015264302d30303560d81b6044820152606401610230565b61012082015160200151600190810b12801590610416575061012082015151600190810b12155b8061042e57508160c0015167ffffffffffffffff1642115b6104625760405162461bcd60e51b8152602060048201526005602482015264181698181b60d91b6044820152606401610230565b600061046e8284610e96565b9050600061048184610160015183611142565b6040805160a08101825286516001600160a01b0390811682528783015181166020830152608080890151821693830193909352600354811660608301528651169181019190915260e0860151919250906104e09088908490849061122a565b6001546001600160a01b0316158015906104fd5750606082015115155b156105865760015460e0860151865160408089015160608701519151631d9dc2a760e21b81526001600160a01b03948516600482015292841660248401528316604483015260648201529116906376770a9c90608401600060405180830381600087803b15801561056d57600080fd5b505af1158015610581573d6000803e3d6000fd5b505050505b6002546001600160a01b0316158015906105a35750606082015115155b156106195760025460e08601516060840151604051630bb03fdb60e21b81526001600160a01b0392831660048201526024810191909152911690632ec0ff6c90604401600060405180830381600087803b15801561060057600080fd5b505af1158015610614573d6000803e3d6000fd5b505050505b7f1cb4a08ebb7666285e2651c86215fd774d44b0e6835bd40e86e90e7e19bca57a60405180604001604052808981526020018481525060405161065c91906119e4565b60405180910390a1506040805160a081018252825181526020808401519082015282820151918101919091526060808301519082015260809182015191810191909152600160005595945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663795053d36040518163ffffffff1660e01b815260040160206040518083038186803b15801561070657600080fd5b505afa15801561071a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073e919061161c565b6001600160a01b0316336001600160a01b03161461075b57600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600260005414156107dd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610230565b600260009081558167ffffffffffffffff8111156107fd576107fd611aec565b60405190808252806020026020018201604052801561083657816020015b6108236113fc565b81526020019060019003908161081b5790505b50905060005b82811015610c9a5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637d19e59686868581811061088757610887611ad6565b905060200201356040518263ffffffff1660e01b81526004016108ac91815260200190565b60006040518083038186803b1580156108c457600080fd5b505afa1580156108d8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261090091908101906117c1565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166316e0551b87878681811061094557610945611ad6565b905060200201356040518263ffffffff1660e01b815260040161096a91815260200190565b60a06040518083038186803b15801561098257600080fd5b505afa158015610996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ba9190611731565b905081610100015161ffff166000146109fd5760405162461bcd60e51b8152602060048201526005602482015264302d30303560d81b6044820152606401610230565b61012082015160200151600190810b12801590610a24575061012082015151600190810b12155b80610a3c57508160c0015167ffffffffffffffff1642115b610a705760405162461bcd60e51b8152602060048201526005602482015264181698181b60d91b6044820152606401610230565b6000610a7c8284610e96565b90506000610a8f84610160015183611142565b6040805160a08101825286516001600160a01b03908116825287830151811660208301526080808901518216938301939093526003548116606083015286511691810191909152909150610b01898988818110610aee57610aee611ad6565b9050602002013583838860e0015161122a565b6001546001600160a01b031615801590610b1e5750606082015115155b15610ba75760015460e0860151865160408089015160608701519151631d9dc2a760e21b81526001600160a01b03948516600482015292841660248401528316604483015260648201529116906376770a9c90608401600060405180830381600087803b158015610b8e57600080fd5b505af1158015610ba2573d6000803e3d6000fd5b505050505b6002546001600160a01b031615801590610bc45750606082015115155b15610c3a5760025460e08601516060840151604051630bb03fdb60e21b81526001600160a01b0392831660048201526024810191909152911690632ec0ff6c90604401600060405180830381600087803b158015610c2157600080fd5b505af1158015610c35573d6000803e3d6000fd5b505050505b60405180604001604052808a8a89818110610c5757610c57611ad6565b90506020020135815260200183815250878781518110610c7957610c79611ad6565b6020026020010181905250505050505080610c9390611aa5565b905061083c565b507f78440173bde658099ce0189e1e59632aab52a09bc1fdb14091b82b40873f5ad581604051610cca9190611953565b60405180910390a15050600160005550565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663795053d36040518163ffffffff1660e01b815260040160206040518083038186803b158015610d3557600080fd5b505afa158015610d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6d919061161c565b6001600160a01b0316336001600160a01b031614610d8a57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663795053d36040518163ffffffff1660e01b815260040160206040518083038186803b158015610e1257600080fd5b505afa158015610e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4a919061161c565b6001600160a01b0316336001600160a01b031614610e6757600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610e9e6113de565b610ea66113de565b600084606001518015610eba575084604001515b9050600081610eca576000610ed0565b85602001515b905085608001511561100b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c403c536040518060a00160405280886101400151600060ff1660048110610f3157610f31611ad6565b6020908102919091015161ffff90811683526101408b018051830151821692840192909252815160409081015182168185015291516060908101518216908401528616608090920191909152517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b168152610fb491906004016119a1565b60a06040518083038186803b158015610fcc57600080fd5b505afa158015610fe0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110049190611639565b9250611136565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d02f411e6040518060a00160405280886101400151600060ff166004811061106057611060611ad6565b6020908102919091015161ffff90811683526101408b018051830151821692840192909252815160409081015182168185015291516060908101518216908401528616608090920191909152517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526110e391906004016119a1565b60a06040518083038186803b1580156110fb57600080fd5b505afa15801561110f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111339190611639565b92505b50909150505b92915050565b61114a6113de565b6111526113de565b82516127109061116790869061ffff16611a6f565b6111719190611a4d565b815260208301516127109061118b90869061ffff16611a6f565b6111959190611a4d565b60208201526040830151612710906111b290869061ffff16611a6f565b6111bc9190611a4d565b60408201526080830151612710906111d990869061ffff16611a6f565b6111e39190611a4d565b608082018190526040820151602083015183516112009088611a8e565b61120a9190611a8e565b6112149190611a8e565b61121e9190611a8e565b60608201529392505050565b6040517fe7aa0bd7000000000000000000000000000000000000000000000000000000008152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e7aa0bd790602401600060405180830381600087803b1580156112a557600080fd5b505af11580156112b9573d6000803e3d6000fd5b5050505060005b60058110156113d75760008482600581106112dd576112dd611ad6565b602002015111156113c7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638ede1f0584836005811061132957611329611ad6565b602002015186846005811061134057611340611ad6565b60200201516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015260248101919091529085166044820152606401600060405180830381600087803b1580156113ae57600080fd5b505af11580156113c2573d6000803e3d6000fd5b505050505b6113d081611aa5565b90506112c0565b5050505050565b6040518060a001604052806005906020820280368337509192915050565b6040518060400160405280600081526020016114166113de565b905290565b805161142681611b02565b919050565b600082601f83011261143c57600080fd5b6040516040810181811067ffffffffffffffff8211171561145f5761145f611aec565b806040525080838560408601111561147657600080fd5b6000805b60028110156114a85782518060010b8114611493578283fd5b8452602093840193929092019160010161147a565b50929695505050505050565b600082601f8301126114c557600080fd5b6040516080810181811067ffffffffffffffff821117156114e8576114e8611aec565b6040528083608081018610156114fd57600080fd5b60005b600481101561152757611512826115ce565b83526020928301929190910190600101611500565b509195945050505050565b8051801515811461142657600080fd5b600082601f83011261155357600080fd5b815167ffffffffffffffff81111561156d5761156d611aec565b6020611581601f8301601f19168201611a1c565b828152858284870101111561159557600080fd5b60005b838110156115b3578581018301518282018401528201611598565b838111156115c45760008385840101525b5095945050505050565b805161ffff8116811461142657600080fd5b805167ffffffffffffffff8116811461142657600080fd5b60006020828403121561160a57600080fd5b813561161581611b02565b9392505050565b60006020828403121561162e57600080fd5b815161161581611b02565b600060a0828403121561164b57600080fd5b82601f83011261165a57600080fd5b60405160a0810181811067ffffffffffffffff8211171561167d5761167d611aec565b604052808360a0810186101561169257600080fd5b60005b6005811015611527576116a7826115ce565b83526020928301929190910190600101611695565b600080602083850312156116cf57600080fd5b823567ffffffffffffffff808211156116e757600080fd5b818501915085601f8301126116fb57600080fd5b81358181111561170a57600080fd5b8660208260051b850101111561171f57600080fd5b60209290920196919550909350505050565b600060a0828403121561174357600080fd5b60405160a0810181811067ffffffffffffffff8211171561176657611766611aec565b604052825161177481611b02565b8152611782602084016115ce565b602082015261179360408401611532565b60408201526117a460608401611532565b60608201526117b560808401611532565b60808201529392505050565b6000602082840312156117d357600080fd5b815167ffffffffffffffff808211156117eb57600080fd5b90830190610220828603121561180057600080fd5b6118086119f2565b6118118361141b565b815261181f602084016115e0565b60208201526118306040840161141b565b6040820152611841606084016115e0565b60608201526118526080840161141b565b608082015260a083015160a082015261186d60c084016115e0565b60c082015261187e60e0840161141b565b60e08201526101006118918185016115ce565b908201526101206118a48785830161142b565b908201526101606118b7878583016114b4565b6101408301526101e084015190820152610200830151828111156118da57600080fd5b6118e687828601611542565b6101808301525095945050505050565b60006020828403121561190857600080fd5b5035919050565b8060005b6005811015611932578151845260209384019390910190600101611913565b50505050565b80518252602081015161194e602084018261190f565b505050565b6020808252825182820181905260009190848201906040850190845b8181101561199557611982838551611938565b9284019260c0929092019160010161196f565b50909695505050505050565b60a08101818360005b60058110156119cd57815161ffff168352602092830192909101906001016119aa565b50505092915050565b60a0810161113c828461190f565b60c0810161113c8284611938565b6040516101a0810167ffffffffffffffff81118282101715611a1657611a16611aec565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611a4557611a45611aec565b604052919050565b600082611a6a57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611a8957611a89611ac0565b500290565b600082821015611aa057611aa0611ac0565b500390565b6000600019821415611ab957611ab9611ac0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611b1757600080fd5b5056fea26469706673582212206e6631fc472fd9b5b233db3500007bc94ab1eda4b37b572b570cd9732e553cb964736f6c63430008070033";

type UnicrowClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnicrowClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnicrowClaim__factory extends ContractFactory {
  constructor(...args: UnicrowClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    unicrow_: AddressLike,
    unicrowArbitrator_: AddressLike,
    protocolFeeAddress_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      unicrow_,
      unicrowArbitrator_,
      protocolFeeAddress_,
      overrides || {}
    );
  }
  override deploy(
    unicrow_: AddressLike,
    unicrowArbitrator_: AddressLike,
    protocolFeeAddress_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      unicrow_,
      unicrowArbitrator_,
      protocolFeeAddress_,
      overrides || {}
    ) as Promise<
      UnicrowClaim & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UnicrowClaim__factory {
    return super.connect(runner) as UnicrowClaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnicrowClaimInterface {
    return new Interface(_abi) as UnicrowClaimInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UnicrowClaim {
    return new Contract(address, _abi, runner) as unknown as UnicrowClaim;
  }
}
