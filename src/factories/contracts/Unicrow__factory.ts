/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Unicrow, UnicrowInterface } from "../../contracts/Unicrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "unicrowClaim_",
        type: "address",
      },
      {
        internalType: "address",
        name: "unicrowArbitrator_",
        type: "address",
      },
      {
        internalType: "address",
        name: "unicrowDispute_",
        type: "address",
      },
      {
        internalType: "address",
        name: "governanceAddress_",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "protocolFee_",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengeExtension",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengePeriodStart",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "marketplace",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketplaceFee",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "challengePeriodEnd",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "claimed",
            type: "uint16",
          },
          {
            internalType: "int16[2]",
            name: "consensus",
            type: "int16[2]",
          },
          {
            internalType: "uint16[4]",
            name: "split",
            type: "uint16[4]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "paymentReference",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Escrow",
        name: "escrow",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "arbitratorFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "challengePeriod",
        type: "uint256",
      },
    ],
    name: "Pay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengeExtension",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengePeriodStart",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "marketplace",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketplaceFee",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "challengePeriodEnd",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "claimed",
            type: "uint16",
          },
          {
            internalType: "int16[2]",
            name: "consensus",
            type: "int16[2]",
          },
          {
            internalType: "uint16[4]",
            name: "split",
            type: "uint16[4]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "paymentReference",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Escrow",
        name: "escrow",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTime",
        type: "uint256",
      },
    ],
    name: "Refund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengeExtension",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengePeriodStart",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "marketplace",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketplaceFee",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "challengePeriodEnd",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "claimed",
            type: "uint16",
          },
          {
            internalType: "int16[2]",
            name: "consensus",
            type: "int16[2]",
          },
          {
            internalType: "uint16[4]",
            name: "split",
            type: "uint16[4]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "paymentReference",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Escrow",
        name: "escrow",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256[5]",
        name: "amounts",
        type: "uint256[5]",
      },
    ],
    name: "Release",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "uint16[4]",
        name: "split",
        type: "uint16[4]",
      },
      {
        internalType: "int16[2]",
        name: "consensus",
        type: "int16[2]",
      },
      {
        internalType: "uint64",
        name: "challengeStart",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "challengeEnd",
        type: "uint64",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "escrowIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "getAllEscrowData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "buyer",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "challengeExtension",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "seller",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "challengePeriodStart",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "marketplace",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "marketplaceFee",
                type: "uint256",
              },
              {
                internalType: "uint64",
                name: "challengePeriodEnd",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "currency",
                type: "address",
              },
              {
                internalType: "uint16",
                name: "claimed",
                type: "uint16",
              },
              {
                internalType: "int16[2]",
                name: "consensus",
                type: "int16[2]",
              },
              {
                internalType: "uint16[4]",
                name: "split",
                type: "uint16[4]",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "paymentReference",
                type: "string",
              },
            ],
            internalType: "struct Escrow",
            name: "escrow",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "arbitrator",
                type: "address",
              },
              {
                internalType: "uint16",
                name: "arbitratorFee",
                type: "uint16",
              },
              {
                internalType: "bool",
                name: "sellerConsensus",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "buyerConsensus",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "arbitrated",
                type: "bool",
              },
            ],
            internalType: "struct Arbitrator",
            name: "arbitrator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "latestSettlementOfferBy",
                type: "address",
              },
              {
                internalType: "uint16[2]",
                name: "latestSettlementOffer",
                type: "uint16[2]",
              },
            ],
            internalType: "struct Settlement",
            name: "settlement",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "address_",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
            ],
            internalType: "struct Token",
            name: "token",
            type: "tuple",
          },
        ],
        internalType: "struct Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "getEscrow",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengeExtension",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengePeriodStart",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "marketplace",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketplaceFee",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "challengePeriodEnd",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "claimed",
            type: "uint16",
          },
          {
            internalType: "int16[2]",
            name: "consensus",
            type: "int16[2]",
          },
          {
            internalType: "uint16[4]",
            name: "split",
            type: "uint16[4]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "paymentReference",
            type: "string",
          },
        ],
        internalType: "struct Escrow",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "marketplace",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "marketplaceFee",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "challengePeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "challengeExtension",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "paymentReference",
            type: "string",
          },
        ],
        internalType: "struct EscrowInput",
        name: "input",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "arbitratorFee",
        type: "uint16",
      },
    ],
    name: "pay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "sendEscrowShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "setClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "uint16[4]",
        name: "split",
        type: "uint16[4]",
      },
      {
        internalType: "int16[2]",
        name: "consensus",
        type: "int16[2]",
      },
    ],
    name: "settle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[5]",
        name: "currentSplit",
        type: "uint16[5]",
      },
    ],
    name: "splitCalculation",
    outputs: [
      {
        internalType: "uint16[5]",
        name: "",
        type: "uint16[5]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "unicrowArbitrator",
    outputs: [
      {
        internalType: "contract IUnicrowArbitrator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unicrowClaim",
    outputs: [
      {
        internalType: "contract IUnicrowClaim",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unicrowDispute",
    outputs: [
      {
        internalType: "contract UnicrowDispute",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "fee",
        type: "uint16",
      },
    ],
    name: "updateEscrowFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "governance",
        type: "address",
      },
    ],
    name: "updateGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620038a1380380620038a18339810160408190526200003491620000d2565b60016000819055606085811b6001600160601b031990811660805287821b811660a0529085901b1660c052600280546001600160b01b031916620100006001600160a01b0386160261ffff19161761ffff8416179055620000a190620000ac602090811b6200244117901c565b50505050506200014c565b80546001019055565b80516001600160a01b0381168114620000cd57600080fd5b919050565b600080600080600060a08688031215620000eb57600080fd5b620000f686620000b5565b94506200010660208701620000b5565b93506200011660408701620000b5565b92506200012660608701620000b5565b9150608086015161ffff811681146200013e57600080fd5b809150509295509295909350565b60805160601c60a05160601c60c05160601c6136d6620001cb6000396000818161028b015281816103ff01528181610edc01526120e60152600081816103da01528181610ddf015281816111ef015261238e0152600081816101cc0152818161073001528181610eaa01528181611856015261202701526136d66000f3fe6080604052600436106101295760003560e01c80638b0473b4116100a5578063b256126311610074578063d25dd97511610059578063d25dd9751461037b578063e7aa0bd7146103a8578063e9db7d79146103c857600080fd5b8063b25612631461032e578063d02f411e1461034e57600080fd5b80638b0473b4146102ad5780638ede1f05146102cd578063a5ed6c6d146102ed578063b0e21e8a1461030057600080fd5b806349c4920f116100fc578063795053d3116100e1578063795053d3146102265780637d19e5961461024c5780637f5d42851461027957600080fd5b806349c4920f146101ba57806364166e631461020657600080fd5b80630a6b25f21461012e578063278ecde11461015057806334d844d81461017057806337bdc99b1461019a575b600080fd5b34801561013a57600080fd5b5061014e610149366004612fc3565b6103fc565b005b34801561015c57600080fd5b5061014e61016b366004612f53565b6104d5565b34801561017c57600080fd5b506001546101879081565b6040519081526020015b60405180910390f35b3480156101a657600080fd5b5061014e6101b5366004612f53565b610adf565b3480156101c657600080fd5b506101ee7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610191565b34801561021257600080fd5b5061014e610221366004612f85565b610ea7565b34801561023257600080fd5b506002546101ee906201000090046001600160a01b031681565b34801561025857600080fd5b5061026c610267366004612f53565b610f50565b6040516101919190613389565b34801561028557600080fd5b506101ee7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b957600080fd5b5061014e6102c8366004612f36565b611159565b3480156102d957600080fd5b5061014e6102e8366004612bec565b6111ec565b6101876102fb366004612e2b565b61129a565b34801561030c57600080fd5b5060025461031b9061ffff1681565b60405161ffff9091168152602001610191565b34801561033a57600080fd5b5061014e610349366004612bcf565b611c61565b34801561035a57600080fd5b5061036e610369366004612c2e565b611cc7565b60405161019191906132a1565b34801561038757600080fd5b5061039b610396366004612f53565b611e67565b60405161019191906132e9565b3480156103b457600080fd5b5061014e6103c3366004612f53565b61238b565b3480156103d457600080fd5b506101ee7f000000000000000000000000000000000000000000000000000000000000000081565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461043157600080fd5b600085815260036020526040902061044e906006018560046127e6565b50600085815260036020526040902061046c90600501846002612880565b506000948552600360205260409094206001810180547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff94851602179055600401805467ffffffffffffffff191691909416179092555050565b6002600054141561052d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600081815582815260036020818152604080842081516101a08101835281546001600160a01b038082168352600160a01b9182900467ffffffffffffffff90811696840196909652600184015480821684870152919091048516606083015282880154811660808301529482015460a0820152600482015493841660c082015268010000000000000000840490941660e0850152600160e01b90920461ffff1661010084015280518082019182905233956101208501926005850191908288855b82829054906101000a900460010b60010b815260200190600201906020826001010492830192600103820291508084116105f057505050928452505060408051608081019182905260209093019291506006840190600490826000855b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161064d57905050505050508152602001600782015481526020016008820180546106a8906135f5565b80601f01602080910402602001604051908101604052809291908181526020018280546106d4906135f5565b80156107215780601f106106f657610100808354040283529160200191610721565b820191906000526020600020905b81548152906001019060200180831161070457829003601f168201915b505050505081525050905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166316e0551b856040518263ffffffff1660e01b815260040161077c91815260200190565b60a06040518083038186803b15801561079457600080fd5b505afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc9190612d99565b905081604001516001600160a01b0316836001600160a01b03161480610807575081604001516001600160a01b0316326001600160a01b0316145b8061081e575080516001600160a01b038481169116145b80610832575080516001600160a01b031632145b61087e5760405162461bcd60e51b815260206004820152600560248201527f312d3031310000000000000000000000000000000000000000000000000000006044820152606401610524565b61010082015161ffff16156108d55760405162461bcd60e51b815260206004820152600560248201527f302d3030350000000000000000000000000000000000000000000000000000006044820152606401610524565b61014082018051612710905280516000602090910181905281516040018190529051606001819052610120830151610912915b602002015161244a565b61091d9060016134cb565b61012083018051600192830b830b90525161093791610908565b610120830151600191820b90910b6020918201526101408301516000868152600390925260409091206109719160069091019060046128dc565b506101208201516000858152600360205260409020610997916005909101906002612932565b506000848152600360205260409020600401805461ffff60e01b1916600160e01b179055600161010083015260e08201516001600160a01b0316610a825781516101608301516040516000926001600160a01b031691908381818185875af1925050503d8060008114610a26576040519150601f19603f3d011682016040523d82523d6000602084013e610a2b565b606091505b5050905080610a7c5760405162461bcd60e51b815260206004820152600560248201527f312d3031320000000000000000000000000000000000000000000000000000006044820152606401610524565b50610a9a565b610a9a8260e00151836000015184610160015161246d565b837f1ec8ac2428b647686d37ee1aee5009f337cf5f0b7c5709b547b4461c50b45a248342604051610acc92919061339c565b60405180910390a2505060016000555050565b600081815260036020818152604080842081516101a08101835281546001600160a01b038082168352600160a01b9182900467ffffffffffffffff908116968401969096526001840154808216848701529190910485166060830152600280840154821660808401529583015460a0830152600483015494851660c08301526801000000000000000085041660e0820152600160e01b90930461ffff16610100840152815180830192839052339594919261012085019260058501918288855b82829054906101000a900460010b60010b81526020019060020190602082600101049283019260010382029150808411610b9f57505050928452505060408051608081019182905260209093019291506006840190600490826000855b82829054906101000a900461ffff1661ffff1681526020019060020190602082600101049283019260010382029150808411610bfc5790505050505050815260200160078201548152602001600882018054610c57906135f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610c83906135f5565b8015610cd05780601f10610ca557610100808354040283529160200191610cd0565b820191906000526020600020905b815481529060010190602001808311610cb357829003601f168201915b505050505081525050905080600001516001600160a01b0316826001600160a01b031614610d405760405162461bcd60e51b815260206004820152600560248201527f312d3032350000000000000000000000000000000000000000000000000000006044820152606401610524565b610120810151610d51906000610908565b610d5c9060016134cb565b61012082018051600192830b830b905251610d7691610908565b61012082018051600192830b90920b60209283015251600085815260039092526040909120610dac916005909101906002612932565b506040517f379607f5000000000000000000000000000000000000000000000000000000008152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063379607f59060240160a060405180830381600087803b158015610e2b57600080fd5b505af1158015610e3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e639190612c56565b9050837f2b68cbe2d13ab71dfaebca786cc9fdbbe99b2da6531ab8fe2aaf88edf13391c7428484604051610e9993929190613407565b60405180910390a250505050565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610f065750337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316145b610f0f57600080fd5b6000838152600360205260409020610f2c906006018360046127e6565b506000838152600360205260409020610f4a90600501826002612880565b50505050565b610f5861298b565b600082815260036020818152604080842081516101a08101835281546001600160a01b038082168352600160a01b9182900467ffffffffffffffff908116968401969096526001840154808216848701529190910485166060830152600280840154821660808401529583015460a0830152600483015494851660c08301526801000000000000000085041660e0820152600160e01b90930461ffff16610100840152815180830192839052929490936101208601939260058601928390855b82829054906101000a900460010b60010b8152602001906002019060208260010104928301926001038202915080841161101857505050928452505060408051608081019182905260209093019291506006840190600490826000855b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161107557905050505050508152602001600782015481526020016008820180546110d0906135f5565b80601f01602080910402602001604051908101604052809291908181526020018280546110fc906135f5565b80156111495780601f1061111e57610100808354040283529160200191611149565b820191906000526020600020905b81548152906001019060200180831161112c57829003601f168201915b5050505050815250509050919050565b6002546201000090046001600160a01b0316336001600160a01b03161461117f57600080fd5b60648161ffff1611156111d45760405162461bcd60e51b815260206004820152600560248201527f302d3030380000000000000000000000000000000000000000000000000000006044820152606401610524565b6002805461ffff191661ffff92909216919091179055565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461122157600080fd5b6001600160a01b03811661128a576040516001600160a01b038416906113889084906000818181858888f193505050503d806000811461127d576040519150601f19603f3d011682016040523d82523d6000602084013e611282565b606091505b505050505050565b61129581848461246d565b505050565b6000600260005414156112ef5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610524565b600260008190556001549054339060c0870135906127109061ffff1661131b60608a0160408b01612f36565b6113259088613510565b61132f9190613510565b61ffff16106113805760405162461bcd60e51b815260206004820152600560248201527f312d3032360000000000000000000000000000000000000000000000000000006044820152606401610524565b6000838152600360205260409020546001600160a01b0316156113e55760405162461bcd60e51b815260206004820152600560248201527f302d3030310000000000000000000000000000000000000000000000000000006044820152606401610524565b60006113f46020890189612bcf565b6001600160a01b0316141561144b5760405162461bcd60e51b815260206004820152600560248201527f302d3030320000000000000000000000000000000000000000000000000000006044820152606401610524565b6114586020880188612bcf565b6001600160a01b0316826001600160a01b031614156114b95760405162461bcd60e51b815260206004820152600560248201527f302d3030330000000000000000000000000000000000000000000000000000006044820152606401610524565b600081116115095760405162461bcd60e51b815260206004820152600560248201527f302d3031310000000000000000000000000000000000000000000000000000006044820152606401610524565b34156115775760006115216080890160608a01612bcf565b6001600160a01b0316146115775760405162461bcd60e51b815260206004820152600560248201527f302d3031300000000000000000000000000000000000000000000000000000006044820152606401610524565b60006115896080890160608a01612bcf565b6001600160a01b031614156115a9573481146115a457600080fd5b6116ed565b60006115bb6080890160608a01612bcf565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156115fc57600080fd5b505afa158015611610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116349190612f6c565b905061165161164960808a0160608b01612bcf565b843085612516565b600061166360808a0160608b01612bcf565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156116a457600080fd5b505afa1580156116b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116dc9190612f6c565b90506116e882826135b2565b925050505b60006116ff6060890160408a01612f36565b61ffff16111561177257600061171b6040890160208a01612bcf565b6001600160a01b031614156117725760405162461bcd60e51b815260206004820152600560248201527f302d3030390000000000000000000000000000000000000000000000000000006044820152606401610524565b6001600160a01b038616156118b357816001600160a01b0316866001600160a01b0316141580156117c157506117ab6020880188612bcf565b6001600160a01b0316866001600160a01b031614155b61180d5760405162461bcd60e51b815260206004820152600560248201527f312d3032370000000000000000000000000000000000000000000000000000006044820152606401610524565b6040517f2ea8eddd000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b03878116602483015261ffff871660448301527f00000000000000000000000000000000000000000000000000000000000000001690632ea8eddd90606401600060405180830381600087803b15801561189a57600080fd5b505af11580156118ae573d6000803e3d6000fd5b505050505b604080516080810182526000808252612710602083015291818101906118df9060608c01908c01612f36565b61ffff908116825260025416602091820152604080518082018252600080825260018285015282516101a081019093526001600160a01b0388168352939450929181018261193360c08e0160a08f01613025565b63ffffffff16116119535761194e60a08d0160808e01613025565b611963565b61196360c08d0160a08e01613025565b63ffffffff16815260209081019061197d908d018d612bcf565b6001600160a01b031681526020014267ffffffffffffffff1681526020018b60200160208101906119ae9190612bcf565b6001600160a01b031681526020016119cc60608d0160408e01612f36565b61ffff1681526020016119e560a08d0160808e01613025565b6119f59063ffffffff1642613536565b67ffffffffffffffff168152602001611a1460808d0160608e01612bcf565b6001600160a01b031681526000602082015260408101849052606081018590526080810186905260a001611a4b60e08d018d613454565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508881526003602081815260409283902085518154928701516001600160a01b039182167fffffffff0000000000000000000000000000000000000000000000000000000094851617600160a01b67ffffffffffffffff92831681029190911784559588015160018401805460608b015192851690871617918316909702179095556080870151600280840180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169284169290921790915560a08801519483019490945560c087015160048301805460e08a01516101008b0151939098169516949094176801000000000000000096909216959095021761ffff60e01b1916600160e01b61ffff909516949094029390931790556101208401519394508493919250611bb2916005840191612932565b50610140820151611bc990600683019060046128dc565b5061016082015160078201556101808201518051611bf1916008840191602090910190612a02565b5050600180548101905550857f4175a6fc82ba411dc8ef77e26b517727e5c1a6c47eca1528ae01dc17f4b54a1d42838c8c8f6080016020810190611c359190613025565b604051611c469594939291906133be565b60405180910390a25050600160005550919695505050505050565b6002546201000090046001600160a01b0316336001600160a01b031614611c8757600080fd5b600280546001600160a01b0390921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b611ccf612a76565b611cd7612a76565b600080611cea6080860160608701612f36565b61ffff161115611d3d57612710611d076040860160208701612f36565b61ffff16611d1b6080870160608801612f36565b61ffff16611d299190613570565b611d33919061354e565b61ffff1660608301525b6000611d4f6060860160408701612f36565b61ffff161115611da257612710611d6c6040860160208701612f36565b61ffff16611d806060870160408801612f36565b61ffff16611d8e9190613570565b611d98919061354e565b61ffff1660408301525b6000611db460a0860160808701612f36565b61ffff161115611e0057612710611dd16040860160208701612f36565b61ffff16611de560a0870160808801612f36565b61ffff16611df39190613570565b611dfd919061354e565b90505b60408083015160608401518392611e1c90880160208901612f36565b611e26919061358f565b611e30919061358f565b611e3a919061358f565b61ffff16602080840191909152611e5390850185612f36565b61ffff908116835216608082015292915050565b611e6f612a94565b6000828152600360209081526040808320600401548151606081019092526801000000000000000090046001600160a01b0316808252929181018315611f2557836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611ee857600080fd5b505afa158015611efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f20919061304b565b611f28565b60125b60ff1681526020016001600160a01b03841615611fb957836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015611f7857600080fd5b505afa158015611f8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611fb49190810190612cf7565b611ff0565b6040518060400160405280600381526020017f45544800000000000000000000000000000000000000000000000000000000008152505b90526040517f16e0551b000000000000000000000000000000000000000000000000000000008152600481018690529091506000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906316e0551b9060240160a06040518083038186803b15801561207157600080fd5b505afa158015612085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a99190612d99565b6040517ffe5e2969000000000000000000000000000000000000000000000000000000008152600481018790529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063fe5e29699060240160606040518083038186803b15801561212857600080fd5b505afa15801561213c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121609190612e8a565b604080516000898152600360208190528382206102208401855280546001600160a01b0380821660808701908152600160a01b9283900467ffffffffffffffff90811660a0890152600185015480841660c08a015293909304831660e08801526002808501548316610100890152948401546101208801526004840154928316610140880152680100000000000000008304909116610160870152600160e01b90910461ffff166101808601528551808701968790529697509395869591936101a087019391926005860192918390855b82829054906101000a900460010b60010b8152602001906002019060208260010104928301926001038202915080841161223157505050928452505060408051608081019182905260209093019291506006840190600490826000855b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161228e57905050505050508152602001600782015481526020016008820180546122e9906135f5565b80601f0160208091040260200160405190810160405280929190818152602001828054612315906135f5565b80156123625780601f1061233757610100808354040283529160200191612362565b820191906000526020600020905b81548152906001019060200180831161234557829003601f168201915b505050505081525050815260200183815260200182815260200184815250945050505050919050565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146123c057600080fd5b600260005414156124135760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610524565b60026000908155908152600360205260408120600401805461ffff60e01b1916600160e01b17905560019055565b80546001019055565b6000808260010b1215612465576124608261362a565b612467565b815b92915050565b6040516001600160a01b0383166024820152604481018290526112959084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612567565b6040516001600160a01b0380851660248301528316604482015260648101829052610f4a9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016124b2565b60006125bc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661264c9092919063ffffffff16565b80519091501561129557808060200190518101906125da9190612cdc565b6112955760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610524565b606061265b8484600085612665565b90505b9392505050565b6060824710156126dd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610524565b6001600160a01b0385163b6127345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610524565b600080866001600160a01b031685876040516127509190613285565b60006040518083038185875af1925050503d806000811461278d576040519150601f19603f3d011682016040523d82523d6000602084013e612792565b606091505b50915091506127a28282866127ad565b979650505050505050565b606083156127bc57508161265e565b8251156127cc5782518084602001fd5b8160405162461bcd60e51b815260040161052491906132d6565b6001830191839082156128705791602002820160005b8382111561284057833561ffff1683826101000a81548161ffff021916908361ffff16021790555092602001926002016020816001010492830192600103026127fc565b801561286e5782816101000a81549061ffff0219169055600201602081600101049283019260010302612840565b505b5061287c929150612b0c565b5090565b6001830191839082156128705791602002820160005b8382111561284057833560010b83826101000a81548161ffff021916908360010b61ffff1602179055509260200192600201602081600101049283019260010302612896565b6001830191839082156128705791602002820160005b8382111561284057835183826101000a81548161ffff021916908361ffff16021790555092602001926002016020816001010492830192600103026128f2565b6001830191839082156128705791602002820160005b8382111561284057835183826101000a81548161ffff021916908360010b61ffff1602179055509260200192600201602081600101049283019260010302612948565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915261012081016129e1612b21565b81526020016129ee612b3f565b815260200160008152602001606081525090565b828054612a0e906135f5565b90600052602060002090601f016020900481019282612a305760008555612870565b82601f10612a4957805160ff1916838001178555612870565b82800160010185558215612870579182015b82811115612870578251825591602001919060010190612a5b565b6040518060a001604052806005906020820280368337509192915050565b6040518060800160405280612aa761298b565b81526040805160a081018252600080825260208281018290529282018190526060820181905260808201529101908152602001612ae2612b5d565b8152604080516060808201835260008083526020838101919091529282015291015290565b905290565b5b8082111561287c5760008155600101612b0d565b60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806040016040528060006001600160a01b03168152602001612b07612b21565b806040810183101561246757600080fd5b806080810183101561246757600080fd5b80518015158114612bb257600080fd5b919050565b803567ffffffffffffffff81168114612bb257600080fd5b600060208284031215612be157600080fd5b813561265e81613678565b600080600060608486031215612c0157600080fd5b8335612c0c81613678565b9250602084013591506040840135612c2381613678565b809150509250925092565b600060a08284031215612c4057600080fd5b8260a083011115612c5057600080fd5b50919050565b600060a08284031215612c6857600080fd5b82601f830112612c7757600080fd5b60405160a0810181811067ffffffffffffffff82111715612c9a57612c9a613662565b604052808360a08101861015612caf57600080fd5b60005b6005811015612cd1578151835260209283019290910190600101612cb2565b509195945050505050565b600060208284031215612cee57600080fd5b61265e82612ba2565b600060208284031215612d0957600080fd5b815167ffffffffffffffff80821115612d2157600080fd5b818401915084601f830112612d3557600080fd5b815181811115612d4757612d47613662565b604051601f8201601f19908116603f01168101908382118183101715612d6f57612d6f613662565b81604052828152876020848701011115612d8857600080fd5b6127a28360208301602088016135c9565b600060a08284031215612dab57600080fd5b60405160a0810181811067ffffffffffffffff82111715612dce57612dce613662565b6040528251612ddc81613678565b81526020830151612dec81613690565b6020820152612dfd60408401612ba2565b6040820152612e0e60608401612ba2565b6060820152612e1f60808401612ba2565b60808201529392505050565b600080600060608486031215612e4057600080fd5b833567ffffffffffffffff811115612e5757600080fd5b84016101008187031215612e6a57600080fd5b92506020840135612e7a81613678565b91506040840135612c2381613690565b600060608284031215612e9c57600080fd5b6040516040810181811067ffffffffffffffff82111715612ebf57612ebf613662565b6040528251612ecd81613678565b81526020603f84018513612ee057600080fd5b612ee86134a2565b8082860187606088011115612efc57600080fd5b60005b6002811015612f25578151612f1381613690565b84529284019290840190600101612eff565b505091830191909152509392505050565b600060208284031215612f4857600080fd5b813561265e81613690565b600060208284031215612f6557600080fd5b5035919050565b600060208284031215612f7e57600080fd5b5051919050565b600080600060e08486031215612f9a57600080fd5b83359250612fab8560208601612b91565b9150612fba8560a08601612b80565b90509250925092565b60008060008060006101208688031215612fdc57600080fd5b85359450612fed8760208801612b91565b9350612ffc8760a08801612b80565b925061300a60e08701612bb7565b91506130196101008701612bb7565b90509295509295909350565b60006020828403121561303757600080fd5b813563ffffffff8116811461265e57600080fd5b60006020828403121561305d57600080fd5b815160ff8116811461265e57600080fd5b8060005b6002811015610f4a578151600190810b85526020948501949092019101613072565b8060005b6004811015610f4a57815161ffff16845260209384019390910190600101613098565b600081518084526130d38160208601602086016135c9565b601f01601f19169290920160200192915050565b80516001600160a01b0316825260006102206020830151613114602086018267ffffffffffffffff169052565b50604083015161312f60408601826001600160a01b03169052565b50606083015161314b606086018267ffffffffffffffff169052565b50608083015161316660808601826001600160a01b03169052565b5060a083015160a085015260c083015161318c60c086018267ffffffffffffffff169052565b5060e08301516131a760e08601826001600160a01b03169052565b506101008381015161ffff1690850152610120808401516131ca8287018261306e565b50506101408301516101606131e181870183613094565b8401516101e0860152506101808301516102008501829052613205828601826130bb565b95945050505050565b6001600160a01b03815116825260208082015181840160005b600281101561128257825161ffff1682529183019190830190600101613227565b6001600160a01b03815116825260ff6020820151166020830152600060408201516060604085015261327d60608501826130bb565b949350505050565b600082516132978184602087016135c9565b9190910192915050565b60a08101818360005b60058110156132cd57815161ffff168352602092830192909101906001016132aa565b50505092915050565b60208152600061265e60208301846130bb565b60208152600082516101408060208501526133086101608501836130e7565b915060208501516001600160a01b03815116604086015261ffff60208201511660608601526040810151151560808601526060810151151560a08601526080810151151560c086015250604085015161336460e086018261320e565b506060850151848303601f19018286015261337f8382613248565b9695505050505050565b60208152600061265e60208301846130e7565b6040815260006133af60408301856130e7565b90508260208301529392505050565b85815260a0602082015260006133d760a08301876130e7565b6001600160a01b039590951660408301525061ffff92909216606083015263ffffffff1660809091015292915050565b8381526000602060e08184015261342160e08401866130e7565b9150604083018460005b60058110156134485781518352918301919083019060010161342b565b50505050949350505050565b6000808335601e1984360301811261346b57600080fd5b83018035915067ffffffffffffffff82111561348657600080fd5b60200191503681900382131561349b57600080fd5b9250929050565b6040805190810167ffffffffffffffff811182821017156134c5576134c5613662565b60405290565b60008160010b8360010b6000821282617fff038213811516156134f0576134f061364c565b82617fff190382128116156135075761350761364c565b50019392505050565b600061ffff80831681851680830382111561352d5761352d61364c565b01949350505050565b600082198211156135495761354961364c565b500190565b60008261356b57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561358a5761358a61364c565b500290565b600061ffff838116908316818110156135aa576135aa61364c565b039392505050565b6000828210156135c4576135c461364c565b500390565b60005b838110156135e45781810151838201526020016135cc565b83811115610f4a5750506000910152565b600181811c9082168061360957607f821691505b60208210811415612c5057634e487b7160e01b600052602260045260246000fd5b60008160010b617fff198114156136435761364361364c565b60000392915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461368d57600080fd5b50565b61ffff8116811461368d57600080fdfea2646970667358221220fd6977e3d263118a5d1685529005b26eb7b29f12ae7216c5515ae4354941883864736f6c63430008070033";

type UnicrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnicrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Unicrow__factory extends ContractFactory {
  constructor(...args: UnicrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    unicrowClaim_: AddressLike,
    unicrowArbitrator_: AddressLike,
    unicrowDispute_: AddressLike,
    governanceAddress_: AddressLike,
    protocolFee_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      unicrowClaim_,
      unicrowArbitrator_,
      unicrowDispute_,
      governanceAddress_,
      protocolFee_,
      overrides || {}
    );
  }
  override deploy(
    unicrowClaim_: AddressLike,
    unicrowArbitrator_: AddressLike,
    unicrowDispute_: AddressLike,
    governanceAddress_: AddressLike,
    protocolFee_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      unicrowClaim_,
      unicrowArbitrator_,
      unicrowDispute_,
      governanceAddress_,
      protocolFee_,
      overrides || {}
    ) as Promise<
      Unicrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Unicrow__factory {
    return super.connect(runner) as Unicrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnicrowInterface {
    return new Interface(_abi) as UnicrowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Unicrow {
    return new Contract(address, _abi, runner) as unknown as Unicrow;
  }
}
