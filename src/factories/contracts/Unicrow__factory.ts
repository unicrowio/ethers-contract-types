/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  Contract,
  ContractFactory,
  BigNumberish,
  ContractTransactionResponse,
  Interface,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Unicrow, UnicrowInterface } from "../../contracts/Unicrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "unicrowClaim_",
        type: "address",
      },
      {
        internalType: "address",
        name: "unicrowArbitrator_",
        type: "address",
      },
      {
        internalType: "address",
        name: "unicrowDispute_",
        type: "address",
      },
      {
        internalType: "address",
        name: "governanceAddress_",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "protocolFee_",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengeExtension",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengePeriodStart",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "marketplace",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketplaceFee",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "challengePeriodEnd",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "claimed",
            type: "uint16",
          },
          {
            internalType: "int16[2]",
            name: "consensus",
            type: "int16[2]",
          },
          {
            internalType: "uint16[4]",
            name: "split",
            type: "uint16[4]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Escrow",
        name: "escrow",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "arbitratorFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "challengePeriod",
        type: "uint256",
      },
    ],
    name: "Pay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengeExtension",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengePeriodStart",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "marketplace",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketplaceFee",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "challengePeriodEnd",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "claimed",
            type: "uint16",
          },
          {
            internalType: "int16[2]",
            name: "consensus",
            type: "int16[2]",
          },
          {
            internalType: "uint16[4]",
            name: "split",
            type: "uint16[4]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Escrow",
        name: "escrow",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTime",
        type: "uint256",
      },
    ],
    name: "Refund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengeExtension",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengePeriodStart",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "marketplace",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketplaceFee",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "challengePeriodEnd",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "claimed",
            type: "uint16",
          },
          {
            internalType: "int16[2]",
            name: "consensus",
            type: "int16[2]",
          },
          {
            internalType: "uint16[4]",
            name: "split",
            type: "uint16[4]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Escrow",
        name: "escrow",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256[5]",
        name: "amounts",
        type: "uint256[5]",
      },
    ],
    name: "Release",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "uint16[4]",
        name: "split",
        type: "uint16[4]",
      },
      {
        internalType: "int16[2]",
        name: "consensus",
        type: "int16[2]",
      },
      {
        internalType: "uint64",
        name: "challengeStart",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "challengeEnd",
        type: "uint64",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "escrowIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "getAllEscrowData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "buyer",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "challengeExtension",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "seller",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "challengePeriodStart",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "marketplace",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "marketplaceFee",
                type: "uint256",
              },
              {
                internalType: "uint64",
                name: "challengePeriodEnd",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "currency",
                type: "address",
              },
              {
                internalType: "uint16",
                name: "claimed",
                type: "uint16",
              },
              {
                internalType: "int16[2]",
                name: "consensus",
                type: "int16[2]",
              },
              {
                internalType: "uint16[4]",
                name: "split",
                type: "uint16[4]",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Escrow",
            name: "escrow",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "arbitrator",
                type: "address",
              },
              {
                internalType: "uint16",
                name: "arbitratorFee",
                type: "uint16",
              },
              {
                internalType: "bool",
                name: "sellerConsensus",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "buyerConsensus",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "arbitrated",
                type: "bool",
              },
            ],
            internalType: "struct Arbitrator",
            name: "arbitrator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "latestSettlementOfferBy",
                type: "address",
              },
              {
                internalType: "uint16[2]",
                name: "latestSettlementOffer",
                type: "uint16[2]",
              },
            ],
            internalType: "struct Settlement",
            name: "settlement",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "address_",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
            ],
            internalType: "struct Token",
            name: "token",
            type: "tuple",
          },
        ],
        internalType: "struct Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "getEscrow",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengeExtension",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "challengePeriodStart",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "marketplace",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketplaceFee",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "challengePeriodEnd",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "claimed",
            type: "uint16",
          },
          {
            internalType: "int16[2]",
            name: "consensus",
            type: "int16[2]",
          },
          {
            internalType: "uint16[4]",
            name: "split",
            type: "uint16[4]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Escrow",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "marketplace",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "marketplaceFee",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "challengePeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "challengeExtension",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct EscrowInput",
        name: "input",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "arbitratorFee",
        type: "uint16",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "sendEscrowShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "setClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "uint16[4]",
        name: "split",
        type: "uint16[4]",
      },
      {
        internalType: "int16[2]",
        name: "consensus",
        type: "int16[2]",
      },
    ],
    name: "settle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[5]",
        name: "currentSplit",
        type: "uint16[5]",
      },
    ],
    name: "splitCalculation",
    outputs: [
      {
        internalType: "uint16[5]",
        name: "",
        type: "uint16[5]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "unicrowArbitrator",
    outputs: [
      {
        internalType: "contract IUnicrowArbitrator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unicrowClaim",
    outputs: [
      {
        internalType: "contract IUnicrowClaim",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unicrowDispute",
    outputs: [
      {
        internalType: "contract UnicrowDispute",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "fee",
        type: "uint16",
      },
    ],
    name: "updateEscrowFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "governance",
        type: "address",
      },
    ],
    name: "updateGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162003389380380620033898339810160408190526200003491620000b7565b60016000556001600160601b0319606094851b811660805294841b851660a0529190921b90921660c0526002805461ffff90931661ffff196001600160a01b03939093166201000002929092166001600160b01b03199093169290921717905562000131565b80516001600160a01b0381168114620000b257600080fd5b919050565b600080600080600060a08688031215620000d057600080fd5b620000db866200009a565b9450620000eb602087016200009a565b9350620000fb604087016200009a565b92506200010b606087016200009a565b9150608086015161ffff811681146200012357600080fd5b809150509295509295909350565b60805160601c60a05160601c60c05160601c6131e0620001a96000396000818161028b015281816103ff01528181610cca015261147b0152600081816103c701528181610bcd01528181610f4b01526116910152600081816101cc01528181610c98015281816113bc0152611cfe01526131e06000f3fe6080604052600436106101295760003560e01c80638b0473b4116100a5578063d02f411e11610074578063e7aa0bd711610059578063e7aa0bd714610395578063e9db7d79146103b5578063ef76218f146103e957600080fd5b8063d02f411e1461033b578063d25dd9751461036857600080fd5b80638b0473b4146102ad5780638ede1f05146102cd578063b0e21e8a146102ed578063b25612631461031b57600080fd5b806349c4920f116100fc578063795053d3116100e1578063795053d3146102265780637d19e5961461024c5780637f5d42851461027957600080fd5b806349c4920f146101ba57806364166e631461020657600080fd5b80630a6b25f21461012e578063278ecde11461015057806334d844d81461017057806337bdc99b1461019a575b600080fd5b34801561013a57600080fd5b5061014e610149366004612b93565b6103fc565b005b34801561015c57600080fd5b5061014e61016b366004612b23565b6104d5565b34801561017c57600080fd5b506001546101879081565b6040519081526020015b60405180910390f35b3480156101a657600080fd5b5061014e6101b5366004612b23565b61095f565b3480156101c657600080fd5b506101ee7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610191565b34801561021257600080fd5b5061014e610221366004612b55565b610c95565b34801561023257600080fd5b506002546101ee906201000090046001600160a01b031681565b34801561025857600080fd5b5061026c610267366004612b23565b610d3e565b6040516101919190612f26565b34801561028557600080fd5b506101ee7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b957600080fd5b5061014e6102c8366004612b06565b610eb5565b3480156102d957600080fd5b5061014e6102e83660046127d3565b610f48565b3480156102f957600080fd5b506002546103089061ffff1681565b60405161ffff9091168152602001610191565b34801561032757600080fd5b5061014e6103363660046127b6565b610ff6565b34801561034757600080fd5b5061035b610356366004612815565b61105c565b6040516101919190612e4f565b34801561037457600080fd5b50610388610383366004612b23565b6111fc565b6040516101919190612e97565b3480156103a157600080fd5b5061014e6103b0366004612b23565b61168e565b3480156103c157600080fd5b506101ee7f000000000000000000000000000000000000000000000000000000000000000081565b61014e6103f7366004612a12565b611744565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461043157600080fd5b600085815260036020526040902061044e90600601856004612448565b50600085815260036020526040902061046c906005018460026124e2565b506000948552600360205260409094206001810180547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff94851602179055600401805467ffffffffffffffff191691909416179092555050565b6002600054141561052d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600081815582815260036020818152604080842081516101808101835281546001600160a01b038082168352600160a01b9182900467ffffffffffffffff90811696840196909652600184015480821684870152919091048516606083015282880154811660808301529482015460a0820152600482015493841660c082015268010000000000000000840490941660e0850152600160e01b90920461ffff1661010084015280518082019182905233956101208501926005850191908288855b82829054906101000a900460010b60010b815260200190600201906020826001010492830192600103820291508084116105f057505050928452505060408051608081019182905260209093019291506006840190600490826000855b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161064d57905050505050508152602001600782015481525050905080604001516001600160a01b0316826001600160a01b0316146106ff5760405162461bcd60e51b815260206004820152600560248201527f312d3031310000000000000000000000000000000000000000000000000000006044820152606401610524565b61010081015161ffff16156107565760405162461bcd60e51b815260206004820152600560248201527f302d3030350000000000000000000000000000000000000000000000000000006044820152606401610524565b61014081018051612710905280516000602090910181905281516040018190529051606001819052610120820151610793915b60200201516120ac565b61079e90600161300a565b61012082018051600192830b830b9052516107b891610789565b610120820151600191820b90910b6020918201526101408201516000858152600390925260409091206107f291600690910190600461253e565b506101208101516000848152600360205260409020610818916005909101906002612594565b506000838152600360205260409020600401805461ffff60e01b1916600160e01b179055600161010082015260e08101516001600160a01b03166109035780516101608201516040516000926001600160a01b031691908381818185875af1925050503d80600081146108a7576040519150601f19603f3d011682016040523d82523d6000602084013e6108ac565b606091505b50509050806108fd5760405162461bcd60e51b815260206004820152600560248201527f312d3031320000000000000000000000000000000000000000000000000000006044820152606401610524565b5061091b565b61091b8160e0015182600001518361016001516120cf565b827f821046171c2f02130a35541a91f8f1f8e3a7ae3ee1dd301a85a01ba306c7a048824260405161094d929190612f35565b60405180910390a25050600160005550565b600081815260036020818152604080842081516101808101835281546001600160a01b038082168352600160a01b9182900467ffffffffffffffff908116968401969096526001840154808216848701529190910485166060830152600280840154821660808401529583015460a0830152600483015494851660c08301526801000000000000000085041660e0820152600160e01b90930461ffff16610100840152815180830192839052339594919261012085019260058501918288855b82829054906101000a900460010b60010b81526020019060020190602082600101049283019260010382029150808411610a1f57505050928452505060408051608081019182905260209093019291506006840190600490826000855b82829054906101000a900461ffff1661ffff1681526020019060020190602082600101049283019260010382029150808411610a7c57905050505050508152602001600782015481525050905080600001516001600160a01b0316826001600160a01b031614610b2e5760405162461bcd60e51b815260206004820152600560248201527f312d3032350000000000000000000000000000000000000000000000000000006044820152606401610524565b610120810151610b3f906000610789565b610b4a90600161300a565b61012082018051600192830b830b905251610b6491610789565b61012082018051600192830b90920b60209283015251600085815260039092526040909120610b9a916005909101906002612594565b506040517f379607f5000000000000000000000000000000000000000000000000000000008152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063379607f59060240160a060405180830381600087803b158015610c1957600080fd5b505af1158015610c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c51919061283d565b9050837ff01c7e3345c2d0a8d653446870c52894d059808d33363f7035d658c9d982565c428484604051610c8793929190612f99565b60405180910390a250505050565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610cf45750337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316145b610cfd57600080fd5b6000838152600360205260409020610d1a90600601836004612448565b506000838152600360205260409020610d38906005018260026124e2565b50505050565b610d466125ed565b600082815260036020818152604080842081516101808101835281546001600160a01b038082168352600160a01b9182900467ffffffffffffffff908116968401969096526001840154808216848701529190910485166060830152600280840154821660808401529583015460a0830152600483015494851660c08301526801000000000000000085041660e0820152600160e01b90930461ffff16610100840152815180830192839052929490936101208601939260058601928390855b82829054906101000a900460010b60010b81526020019060020190602082600101049283019260010382029150808411610e0657505050928452505060408051608081019182905260209093019291506006840190600490826000855b82829054906101000a900461ffff1661ffff1681526020019060020190602082600101049283019260010382029150808411610e63579050505050505081526020016007820154815250509050919050565b6002546201000090046001600160a01b0316336001600160a01b031614610edb57600080fd5b60648161ffff161115610f305760405162461bcd60e51b815260206004820152600560248201527f302d3030380000000000000000000000000000000000000000000000000000006044820152606401610524565b6002805461ffff191661ffff92909216919091179055565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610f7d57600080fd5b6001600160a01b038116610fe6576040516001600160a01b038416906113889084906000818181858888f193505050503d8060008114610fd9576040519150601f19603f3d011682016040523d82523d6000602084013e610fde565b606091505b505050505050565b610ff18184846120cf565b505050565b6002546201000090046001600160a01b0316336001600160a01b03161461101c57600080fd5b600280546001600160a01b0390921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b61106461265d565b61106c61265d565b60008061107f6080860160608701612b06565b61ffff1611156110d25761271061109c6040860160208701612b06565b61ffff166110b06080870160608801612b06565b61ffff166110be91906130af565b6110c8919061308d565b61ffff1660608301525b60006110e46060860160408701612b06565b61ffff161115611137576127106111016040860160208701612b06565b61ffff166111156060870160408801612b06565b61ffff1661112391906130af565b61112d919061308d565b61ffff1660408301525b600061114960a0860160808701612b06565b61ffff161115611195576127106111666040860160208701612b06565b61ffff1661117a60a0870160808801612b06565b61ffff1661118891906130af565b611192919061308d565b90505b604080830151606084015183926111b190880160208901612b06565b6111bb91906130ce565b6111c591906130ce565b6111cf91906130ce565b61ffff166020808401919091526111e890850185612b06565b61ffff908116835216608082015292915050565b61120461267b565b6000828152600360209081526040808320600401548151606081019092526801000000000000000090046001600160a01b03168082529291810183156112ba57836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561127d57600080fd5b505afa158015611291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b59190612c1b565b6112bd565b60125b60ff1681526020016001600160a01b0384161561134e57836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561130d57600080fd5b505afa158015611321573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261134991908101906128de565b611385565b6040518060400160405280600381526020017f45544800000000000000000000000000000000000000000000000000000000008152505b90526040517f16e0551b000000000000000000000000000000000000000000000000000000008152600481018690529091506000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906316e0551b9060240160a06040518083038186803b15801561140657600080fd5b505afa15801561141a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143e9190612980565b6040517ffe5e2969000000000000000000000000000000000000000000000000000000008152600481018790529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063fe5e29699060240160606040518083038186803b1580156114bd57600080fd5b505afa1580156114d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f59190612a5a565b604080516000898152600360208190528382206102008401855280546001600160a01b0380821660808701908152600160a01b9283900467ffffffffffffffff90811660a0890152600185015480841660c08a015293909304831660e08801526002808501548316610100890152948401546101208801526004840154928316610140880152680100000000000000008304909116610160870152600160e01b90910461ffff166101808601528551808701968790529697509395869591936101a087019391926005860192918390855b82829054906101000a900460010b60010b815260200190600201906020826001010492830192600103820291508084116115c657505050928452505060408051608081019182905260209093019291506006840190600490826000855b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161162357905050505050508152602001600782015481525050815260200183815260200182815260200184815250945050505050919050565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146116c357600080fd5b600260005414156117165760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610524565b60026000908155908152600360205260408120600401805461ffff60e01b1916600160e01b17905560019055565b600260005414156117975760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610524565b600260008190556001549054339060c0860135906127109061ffff166117c36060890160408a01612b06565b6117cd908761304f565b6117d7919061304f565b61ffff16106118285760405162461bcd60e51b815260206004820152600560248201527f312d3032360000000000000000000000000000000000000000000000000000006044820152606401610524565b6000838152600360205260409020546001600160a01b03161561188d5760405162461bcd60e51b815260206004820152600560248201527f302d3030310000000000000000000000000000000000000000000000000000006044820152606401610524565b600061189c60208801886127b6565b6001600160a01b031614156118f35760405162461bcd60e51b815260206004820152600560248201527f302d3030320000000000000000000000000000000000000000000000000000006044820152606401610524565b61190060208701876127b6565b6001600160a01b0316826001600160a01b031614156119615760405162461bcd60e51b815260206004820152600560248201527f302d3030330000000000000000000000000000000000000000000000000000006044820152606401610524565b600081116119b15760405162461bcd60e51b815260206004820152600560248201527f302d3031310000000000000000000000000000000000000000000000000000006044820152606401610524565b3415611a1f5760006119c960808801606089016127b6565b6001600160a01b031614611a1f5760405162461bcd60e51b815260206004820152600560248201527f302d3031300000000000000000000000000000000000000000000000000000006044820152606401610524565b6000611a3160808801606089016127b6565b6001600160a01b03161415611a5157348114611a4c57600080fd5b611b95565b6000611a6360808801606089016127b6565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015611aa457600080fd5b505afa158015611ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611adc9190612b3c565b9050611af9611af16080890160608a016127b6565b843085612178565b6000611b0b6080890160608a016127b6565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015611b4c57600080fd5b505afa158015611b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b849190612b3c565b9050611b9082826130f1565b925050505b6000611ba76060880160408901612b06565b61ffff161115611c1a576000611bc360408801602089016127b6565b6001600160a01b03161415611c1a5760405162461bcd60e51b815260206004820152600560248201527f302d3030390000000000000000000000000000000000000000000000000000006044820152606401610524565b6001600160a01b03851615611d5b57816001600160a01b0316856001600160a01b031614158015611c695750611c5360208701876127b6565b6001600160a01b0316856001600160a01b031614155b611cb55760405162461bcd60e51b815260206004820152600560248201527f312d3032370000000000000000000000000000000000000000000000000000006044820152606401610524565b6040517f2ea8eddd000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b03868116602483015261ffff861660448301527f00000000000000000000000000000000000000000000000000000000000000001690632ea8eddd90606401600060405180830381600087803b158015611d4257600080fd5b505af1158015611d56573d6000803e3d6000fd5b505050505b60408051608081018252600080825261271060208301529181810190611d879060608b01908b01612b06565b61ffff9081168252600254166020918201526040805180820182526000808252600182850152825161018081019093526001600160a01b03881683529394509291810182611ddb60c08d0160a08e01612bf5565b63ffffffff1611611dfb57611df660a08c0160808d01612bf5565b611e0b565b611e0b60c08c0160a08d01612bf5565b63ffffffff168152602090810190611e25908c018c6127b6565b6001600160a01b031681526020014267ffffffffffffffff1681526020018a6020016020810190611e5691906127b6565b6001600160a01b03168152602001611e7460608c0160408d01612b06565b61ffff168152602001611e8d60a08c0160808d01612bf5565b611e9d9063ffffffff1642613075565b67ffffffffffffffff168152602001611ebc60808c0160608d016127b6565b6001600160a01b03908116825260006020808401829052604080850188905260608086018a905260809586018b90528c8452600380845293829020875181549489015167ffffffffffffffff908116600160a01b9081027fffffffff00000000000000000000000000000000000000000000000000000000978816938a169390931792909217835593890151600183018054948b01518616909202938616908816179290921790915594860151600280870180549287167fffffffffffffffffffffffff0000000000000000000000000000000000000000939093169290921790915560a08701519386019390935560c086015160048601805460e08901516101008a015161ffff16600160e01b0261ffff60e01b19919098166801000000000000000002919095169290931691909117919091179190911692909217909155610120830151929350839261201691600584019190612594565b5061014082015161202d906006830190600461253e565b50610160820151816007015590505061204a600180546001019055565b857ffbba319a433efe0615a24edc82430115927a533f1677e597ab29a853908aac5d42838b8b8e60800160208101906120839190612bf5565b604051612094959493929190612f52565b60405180910390a25050600160005550505050505050565b6000808260010b12156120c7576120c282613134565b6120c9565b815b92915050565b6040516001600160a01b038316602482015260448101829052610ff19084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526121c9565b6040516001600160a01b0380851660248301528316604482015260648101829052610d389085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401612114565b600061221e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166122ae9092919063ffffffff16565b805190915015610ff1578080602001905181019061223c91906128c3565b610ff15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610524565b60606122bd84846000856122c7565b90505b9392505050565b60608247101561233f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610524565b6001600160a01b0385163b6123965760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610524565b600080866001600160a01b031685876040516123b29190612e33565b60006040518083038185875af1925050503d80600081146123ef576040519150601f19603f3d011682016040523d82523d6000602084013e6123f4565b606091505b509150915061240482828661240f565b979650505050505050565b6060831561241e5750816122c0565b82511561242e5782518084602001fd5b8160405162461bcd60e51b81526004016105249190612e84565b6001830191839082156124d25791602002820160005b838211156124a257833561ffff1683826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030261245e565b80156124d05782816101000a81549061ffff02191690556002016020816001010492830192600103026124a2565b505b506124de9291506126f3565b5090565b6001830191839082156124d25791602002820160005b838211156124a257833560010b83826101000a81548161ffff021916908360010b61ffff16021790555092602001926002016020816001010492830192600103026124f8565b6001830191839082156124d25791602002820160005b838211156124a257835183826101000a81548161ffff021916908361ffff1602179055509260200192600201602081600101049283019260010302612554565b6001830191839082156124d25791602002820160005b838211156124a257835183826101000a81548161ffff021916908360010b61ffff16021790555092602001926002016020816001010492830192600103026125aa565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101919091526101208101612643612708565b8152602001612650612726565b8152602001600081525090565b6040518060a001604052806005906020820280368337509192915050565b604051806080016040528061268e6125ed565b81526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291019081526020016126c9612744565b8152604080516060808201835260008083526020838101919091529282015291015290565b905290565b5b808211156124de57600081556001016126f4565b60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806040016040528060006001600160a01b031681526020016126ee612708565b80604081018310156120c957600080fd5b80608081018310156120c957600080fd5b8051801515811461279957600080fd5b919050565b803567ffffffffffffffff8116811461279957600080fd5b6000602082840312156127c857600080fd5b81356122c081613182565b6000806000606084860312156127e857600080fd5b83356127f381613182565b925060208401359150604084013561280a81613182565b809150509250925092565b600060a0828403121561282757600080fd5b8260a08301111561283757600080fd5b50919050565b600060a0828403121561284f57600080fd5b82601f83011261285e57600080fd5b60405160a0810181811067ffffffffffffffff821117156128815761288161316c565b604052808360a0810186101561289657600080fd5b60005b60058110156128b8578151835260209283019290910190600101612899565b509195945050505050565b6000602082840312156128d557600080fd5b6122c082612789565b6000602082840312156128f057600080fd5b815167ffffffffffffffff8082111561290857600080fd5b818401915084601f83011261291c57600080fd5b81518181111561292e5761292e61316c565b604051601f8201601f19908116603f011681019083821181831017156129565761295661316c565b8160405282815287602084870101111561296f57600080fd5b612404836020830160208801613108565b600060a0828403121561299257600080fd5b60405160a0810181811067ffffffffffffffff821117156129b5576129b561316c565b60405282516129c381613182565b815260208301516129d38161319a565b60208201526129e460408401612789565b60408201526129f560608401612789565b6060820152612a0660808401612789565b60808201529392505050565b6000806000838503610120811215612a2957600080fd5b60e0811215612a3757600080fd5b5083925060e0840135612a4981613182565b915061010084013561280a8161319a565b600060608284031215612a6c57600080fd5b6040516040810181811067ffffffffffffffff82111715612a8f57612a8f61316c565b6040528251612a9d81613182565b81526020603f84018513612ab057600080fd5b612ab8612fe1565b8082860187606088011115612acc57600080fd5b60005b6002811015612af5578151612ae38161319a565b84529284019290840190600101612acf565b505091830191909152509392505050565b600060208284031215612b1857600080fd5b81356122c08161319a565b600060208284031215612b3557600080fd5b5035919050565b600060208284031215612b4e57600080fd5b5051919050565b600080600060e08486031215612b6a57600080fd5b83359250612b7b8560208601612778565b9150612b8a8560a08601612767565b90509250925092565b60008060008060006101208688031215612bac57600080fd5b85359450612bbd8760208801612778565b9350612bcc8760a08801612767565b9250612bda60e0870161279e565b9150612be9610100870161279e565b90509295509295909350565b600060208284031215612c0757600080fd5b813563ffffffff811681146122c057600080fd5b600060208284031215612c2d57600080fd5b815160ff811681146122c057600080fd5b8060005b6002811015610d38578151600190810b85526020948501949092019101612c42565b8060005b6004811015610d3857815161ffff16845260209384019390910190600101612c68565b60008151808452612ca3816020860160208601613108565b601f01601f19169290920160200192915050565b80516001600160a01b031682526020810151612cdf602084018267ffffffffffffffff169052565b506040810151612cfa60408401826001600160a01b03169052565b506060810151612d16606084018267ffffffffffffffff169052565b506080810151612d3160808401826001600160a01b03169052565b5060a081015160a083015260c0810151612d5760c084018267ffffffffffffffff169052565b5060e0810151612d7260e08401826001600160a01b03169052565b506101008181015161ffff169083015261012080820151612d9582850182612c3e565b5050610140810151610160612dac81850183612c64565b808301516101e085015250505050565b6001600160a01b03815116825260208082015181840160005b6002811015610fde57825161ffff1682529183019190830190600101612dd5565b6001600160a01b03815116825260ff60208201511660208301526000604082015160606040850152612e2b6060850182612c8b565b949350505050565b60008251612e45818460208701613108565b9190910192915050565b60a08101818360005b6005811015612e7b57815161ffff16835260209283019290910190600101612e58565b50505092915050565b6020815260006122c06020830184612c8b565b60208152612ea9602082018351612cb7565b600060208301516001600160a01b0381511661022084015261ffff6020820151166102408401526040810151151561026084015260608101511515610280840152608081015115156102a0840152506040830151612f0b6102c0840182612dbc565b50606083015161032083810152612e2b610340840182612df6565b61020081016120c98284612cb7565b6102208101612f448285612cb7565b826102008301529392505050565b8581526102808101612f676020830187612cb7565b6001600160a01b03851661022083015261ffff841661024083015263ffffffff83166102608301529695505050505050565b8381526102c081016020612faf81840186612cb7565b61022083018460005b6005811015612fd557815183529183019190830190600101612fb8565b50505050949350505050565b6040805190810167ffffffffffffffff811182821017156130045761300461316c565b60405290565b60008160010b8360010b6000821282617fff0382138115161561302f5761302f613156565b82617fff1903821281161561304657613046613156565b50019392505050565b600061ffff80831681851680830382111561306c5761306c613156565b01949350505050565b6000821982111561308857613088613156565b500190565b6000826130aa57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156130c9576130c9613156565b500290565b600061ffff838116908316818110156130e9576130e9613156565b039392505050565b60008282101561310357613103613156565b500390565b60005b8381101561312357818101518382015260200161310b565b83811115610d385750506000910152565b60008160010b617fff1981141561314d5761314d613156565b60000392915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461319757600080fd5b50565b61ffff8116811461319757600080fdfea26469706673582212208e605862fd9ee0525d20b1387415098f2f78165667c8bcb722092ae7d116545964736f6c63430008070033";

type UnicrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnicrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Unicrow__factory extends ContractFactory {
  constructor(...args: UnicrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    unicrowClaim_: AddressLike,
    unicrowArbitrator_: AddressLike,
    unicrowDispute_: AddressLike,
    governanceAddress_: AddressLike,
    protocolFee_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      unicrowClaim_,
      unicrowArbitrator_,
      unicrowDispute_,
      governanceAddress_,
      protocolFee_,
      overrides || {}
    );
  }
  override deploy(
    unicrowClaim_: AddressLike,
    unicrowArbitrator_: AddressLike,
    unicrowDispute_: AddressLike,
    governanceAddress_: AddressLike,
    protocolFee_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      unicrowClaim_,
      unicrowArbitrator_,
      unicrowDispute_,
      governanceAddress_,
      protocolFee_,
      overrides || {}
    ) as Promise<
      Unicrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Unicrow__factory {
    return super.connect(runner) as Unicrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnicrowInterface {
    return new Interface(_abi) as UnicrowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Unicrow {
    return new Contract(address, _abi, runner) as unknown as Unicrow;
  }
}
