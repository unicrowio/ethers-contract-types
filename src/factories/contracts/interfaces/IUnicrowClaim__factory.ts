/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, ContractRunner } from "ethers";
import type {
  IUnicrowClaim,
  IUnicrowClaimInterface,
} from "../../../contracts/interfaces/IUnicrowClaim";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256[5]",
        name: "",
        type: "uint256[5]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "escrows",
        type: "uint256[]",
      },
    ],
    name: "claimMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "crowRewards_",
        type: "address",
      },
    ],
    name: "updateCrowRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "protocolFeeAddress_",
        type: "address",
      },
    ],
    name: "updateProtocolFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "crowRewards_",
        type: "address",
      },
    ],
    name: "updateStakingRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IUnicrowClaim__factory {
  static readonly abi = _abi;
  static createInterface(): IUnicrowClaimInterface {
    return new Interface(_abi) as IUnicrowClaimInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IUnicrowClaim {
    return new Contract(address, _abi, runner) as unknown as IUnicrowClaim;
  }
}
