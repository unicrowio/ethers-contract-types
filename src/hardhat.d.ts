/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "BoringOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringOwnable__factory>;
    getContractFactory(
      name: "BoringOwnableData",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringOwnableData__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "GovernorCountingSimple",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorCountingSimple__factory>;
    getContractFactory(
      name: "GovernorProposalThreshold",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorProposalThreshold__factory>;
    getContractFactory(
      name: "GovernorSettings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorSettings__factory>;
    getContractFactory(
      name: "GovernorVotes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotes__factory>;
    getContractFactory(
      name: "GovernorVotesQuorumFraction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotesQuorumFraction__factory>;
    getContractFactory(
      name: "Governor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Governor__factory>;
    getContractFactory(
      name: "IGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernor__factory>;
    getContractFactory(
      name: "IVotes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVotes__factory>;
    getContractFactory(
      name: "Votes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Votes__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "ERC20Votes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Votes__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "DoubleEndedQueue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DoubleEndedQueue__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "IPeripheryPayments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPeripheryPayments__factory>;
    getContractFactory(
      name: "IPeripheryPaymentsWithFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPeripheryPaymentsWithFee__factory>;
    getContractFactory(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: "CrowRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrowRewards__factory>;
    getContractFactory(
      name: "CrowStakingRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrowStakingRewards__factory>;
    getContractFactory(
      name: "CrowToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrowToken__factory>;
    getContractFactory(
      name: "CrowVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrowVault__factory>;
    getContractFactory(
      name: "ERC4626Votes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC4626Votes__factory>;
    getContractFactory(
      name: "ICrowRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICrowRewards__factory>;
    getContractFactory(
      name: "ICrowStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICrowStaking__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IUnicrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnicrow__factory>;
    getContractFactory(
      name: "IUnicrowArbitrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnicrowArbitrator__factory>;
    getContractFactory(
      name: "IUnicrowClaim",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnicrowClaim__factory>;
    getContractFactory(
      name: "IUnicrowClaimRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnicrowClaimRewards__factory>;
    getContractFactory(
      name: "IUnicrowDispute",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnicrowDispute__factory>;
    getContractFactory(
      name: "IUnicrowPrimaryTokensList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnicrowPrimaryTokensList__factory>;
    getContractFactory(
      name: "IUnicrowStakingRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnicrowStakingRewards__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "CrowRewardsMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrowRewardsMock__factory>;
    getContractFactory(
      name: "CrowStakingRewardsMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrowStakingRewardsMock__factory>;
    getContractFactory(
      name: "DaiToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DaiToken__factory>;
    getContractFactory(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: "SCrowMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SCrowMock__factory>;
    getContractFactory(
      name: "UnicrowPrimaryTokensListMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnicrowPrimaryTokensListMock__factory>;
    getContractFactory(
      name: "USDCToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.USDCToken__factory>;
    getContractFactory(
      name: "USDTToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.USDTToken__factory>;
    getContractFactory(
      name: "SCrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SCrow__factory>;
    getContractFactory(
      name: "Unicrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Unicrow__factory>;
    getContractFactory(
      name: "UnicrowArbitrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnicrowArbitrator__factory>;
    getContractFactory(
      name: "UnicrowClaim",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnicrowClaim__factory>;
    getContractFactory(
      name: "UnicrowDispute",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnicrowDispute__factory>;
    getContractFactory(
      name: "UnicrowGovernance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnicrowGovernance__factory>;
    getContractFactory(
      name: "UnicrowPrimaryTokensList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnicrowPrimaryTokensList__factory>;
    getContractFactory(
      name: "GovernorMultiToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorMultiToken__factory>;
    getContractFactory(
      name: "IGovernorMultiToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernorMultiToken__factory>;
    getContractFactory(
      name: "IVotes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVotes__factory>;
    getContractFactory(
      name: "IERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4626__factory>;
    getContractFactory(
      name: "ERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC4626__factory>;

    getContractAt(
      name: "BoringOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringOwnable>;
    getContractAt(
      name: "BoringOwnableData",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringOwnableData>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "GovernorCountingSimple",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorCountingSimple>;
    getContractAt(
      name: "GovernorProposalThreshold",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorProposalThreshold>;
    getContractAt(
      name: "GovernorSettings",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorSettings>;
    getContractAt(
      name: "GovernorVotes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotes>;
    getContractAt(
      name: "GovernorVotesQuorumFraction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotesQuorumFraction>;
    getContractAt(
      name: "Governor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Governor>;
    getContractAt(
      name: "IGovernor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernor>;
    getContractAt(
      name: "IVotes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVotes>;
    getContractAt(
      name: "Votes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Votes>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "ERC20Votes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Votes>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "DoubleEndedQueue",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DoubleEndedQueue>;
    getContractAt(
      name: "IUniswapV3SwapCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3SwapCallback>;
    getContractAt(
      name: "IPeripheryPayments",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPeripheryPayments>;
    getContractAt(
      name: "IPeripheryPaymentsWithFee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPeripheryPaymentsWithFee>;
    getContractAt(
      name: "ISwapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwapRouter>;
    getContractAt(
      name: "CrowRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CrowRewards>;
    getContractAt(
      name: "CrowStakingRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CrowStakingRewards>;
    getContractAt(
      name: "CrowToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CrowToken>;
    getContractAt(
      name: "CrowVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CrowVault>;
    getContractAt(
      name: "ERC4626Votes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC4626Votes>;
    getContractAt(
      name: "ICrowRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICrowRewards>;
    getContractAt(
      name: "ICrowStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICrowStaking>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IUnicrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUnicrow>;
    getContractAt(
      name: "IUnicrowArbitrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUnicrowArbitrator>;
    getContractAt(
      name: "IUnicrowClaim",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUnicrowClaim>;
    getContractAt(
      name: "IUnicrowClaimRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUnicrowClaimRewards>;
    getContractAt(
      name: "IUnicrowDispute",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUnicrowDispute>;
    getContractAt(
      name: "IUnicrowPrimaryTokensList",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUnicrowPrimaryTokensList>;
    getContractAt(
      name: "IUnicrowStakingRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUnicrowStakingRewards>;
    getContractAt(
      name: "SafeERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "CrowRewardsMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CrowRewardsMock>;
    getContractAt(
      name: "CrowStakingRewardsMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CrowStakingRewardsMock>;
    getContractAt(
      name: "DaiToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DaiToken>;
    getContractAt(
      name: "ERC20Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Mock>;
    getContractAt(
      name: "SCrowMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SCrowMock>;
    getContractAt(
      name: "UnicrowPrimaryTokensListMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnicrowPrimaryTokensListMock>;
    getContractAt(
      name: "USDCToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.USDCToken>;
    getContractAt(
      name: "USDTToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.USDTToken>;
    getContractAt(
      name: "SCrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SCrow>;
    getContractAt(
      name: "Unicrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Unicrow>;
    getContractAt(
      name: "UnicrowArbitrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnicrowArbitrator>;
    getContractAt(
      name: "UnicrowClaim",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnicrowClaim>;
    getContractAt(
      name: "UnicrowDispute",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnicrowDispute>;
    getContractAt(
      name: "UnicrowGovernance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnicrowGovernance>;
    getContractAt(
      name: "UnicrowPrimaryTokensList",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnicrowPrimaryTokensList>;
    getContractAt(
      name: "GovernorMultiToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorMultiToken>;
    getContractAt(
      name: "IGovernorMultiToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernorMultiToken>;
    getContractAt(
      name: "IVotes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVotes>;
    getContractAt(
      name: "IERC4626",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4626>;
    getContractAt(
      name: "ERC4626",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC4626>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
