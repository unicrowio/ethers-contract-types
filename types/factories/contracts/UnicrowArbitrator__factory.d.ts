import { Signer, ContractFactory, ContractTransactionResponse, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { UnicrowArbitrator, UnicrowArbitratorInterface } from "../../contracts/UnicrowArbitrator";
type UnicrowArbitratorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class UnicrowArbitrator__factory extends ContractFactory {
    constructor(...args: UnicrowArbitratorConstructorParams);
    getDeployTransaction(unicrow_: AddressLike, unicrowClaim_: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(unicrow_: AddressLike, unicrowClaim_: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<UnicrowArbitrator & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): UnicrowArbitrator__factory;
    static readonly bytecode = "0x60c06040523480156200001157600080fd5b5060405162001a3d38038062001a3d833981016040819052620000349162000075565b60016000556001600160601b0319606092831b8116608052911b1660a052620000ad565b80516001600160a01b03811681146200007057600080fd5b919050565b600080604083850312156200008957600080fd5b620000948362000058565b9150620000a46020840162000058565b90509250929050565b60805160601c60a05160601c6119336200010a6000396000818161025e015261075f01526000818161016601528181610322015281816103fd0152818161067c01528181610acb01528181610e60015261114a01526119336000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80636e4e2934116100765780638e032c5a1161005b5780638e032c5a146101b3578063e2bc475c146101c6578063e9db7d791461025957600080fd5b80636e4e29341461016157806379414b3c146101a057600080fd5b806316e0551b146100a85780632ea8eddd14610119578063496f928b1461012e5780634c403c5314610141575b600080fd5b6100bb6100b636600461150e565b610280565b6040516101109190600060a0820190506001600160a01b03835116825261ffff602084015116602083015260408301511515604083015260608301511515606083015260808301511515608083015292915050565b60405180910390f35b61012c610127366004611527565b61031f565b005b61012c61013c366004611569565b6103ce565b61015461014f366004611362565b610820565b6040516101109190611612565b6101887f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610110565b61012c6101ae366004611527565b610a64565b61012c6101c1366004611527565b610df1565b61021c6101d436600461150e565b6001602052600090815260409020546001600160a01b0381169061ffff600160a01b8204169060ff600160b01b8204811691600160b81b8104821691600160c01b9091041685565b604080516001600160a01b03909616865261ffff90941660208601529115159284019290925290151560608301521515608082015260a001610110565b6101887f000000000000000000000000000000000000000000000000000000000000000081565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260016020908152604091829020825160a08101845290546001600160a01b038116825261ffff600160a01b8204169282019290925260ff600160b01b83048116151593820193909352600160b81b8204831615156060820152600160c01b9091049091161515608082015290565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461035457600080fd5b60009283526001602052604090922080547701010000000000000000000000000000000000000000000061ffff60b01b1961ffff909516600160a01b027fffffffffffffffffffff000000000000000000000000000000000000000000009092166001600160a01b03909416939093171792909216179055565b60006103d983610280565b604051633e8cf2cb60e11b8152600481018590529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637d19e596906024016102006040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190611405565b82519091506001600160a01b0316336001600160a01b0316146104e25760405162461bcd60e51b815260206004820152600560248201527f322d30303500000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b816060015180156104f4575081604001515b6105405760405162461bcd60e51b815260206004820152600560248201527f322d30303100000000000000000000000000000000000000000000000000000060448201526064016104d9565b61055060408401602085016114ea565b61055d60208501856114ea565b61056791906117f1565b61ffff16612710146105bb5760405162461bcd60e51b815260206004820152600560248201527f312d30303700000000000000000000000000000000000000000000000000000060448201526064016104d9565b6101208101516105d29060005b6020020151611104565b6105dd9060016117ac565b61012082018051600192830b830b9052516105f7916105c8565b610120820151600191820b90910b602091820152610617908401846114ea565b61014082015161ffff91909116905261063660408401602085016114ea565b6101408201805161ffff92909216602090920191909152516101208201516040517f64166e630000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316926364166e63926106bb9289929190600401611761565b600060405180830381600087803b1580156106d557600080fd5b505af11580156106e9573d6000803e3d6000fd5b50505060008581526001602052604080822080547fffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffff16600160c01b179055517f379607f5000000000000000000000000000000000000000000000000000000008152600481018790529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063379607f59060240160a060405180830381600087803b1580156107a357600080fd5b505af11580156107b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107db919061138a565b9050847f078c1bd0728767e70d5913396262af1d8c75f3daa7a80c3c6af9594909bf806383428460405161081193929190611647565b60405180910390a25050505050565b610828611208565b610830611208565b6000808061084460a08701608088016114ea565b61ffff1611156108e15761271061085e60208701876114ea565b61ffff1661087260a08801608089016114ea565b61ffff166108809190611851565b61088a919061182f565b905061271061089f60408701602088016114ea565b61ffff166108b360a08801608089016114ea565b61ffff166108c19190611851565b6108cb919061182f565b91506108d782826117f1565b61ffff1660808401525b60006108f360808701606088016114ea565b61ffff1611156109465761271061091060408701602088016114ea565b61ffff1661092460808801606089016114ea565b61ffff166109329190611851565b61093c919061182f565b61ffff1660608401525b600061095860608701604088016114ea565b61ffff1611156109ab5761271061097560408701602088016114ea565b61ffff1661098960608801604089016114ea565b61ffff166109979190611851565b6109a1919061182f565b61ffff1660408401525b60006109ba60208701876114ea565b61ffff1611156109eb5761ffff81166109d660208701876114ea565b61ffff166109e49190611870565b61ffff1683525b60006109fd60408701602088016114ea565b61ffff161115610a5b57604080840151606085015161ffff8581169392811692911690610a2f90890160208a016114ea565b61ffff16610a3d9190611870565b610a479190611870565b610a519190611870565b61ffff1660208401525b50909392505050565b8233610a708282611127565b610aa45760405162461bcd60e51b81526020600482015260056024820152640c8b4c0c0d60da1b60448201526064016104d9565b6000858152600160205260408082209051633e8cf2cb60e11b8152600481018890529091907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637d19e596906024016102006040518083038186803b158015610b1657600080fd5b505afa158015610b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4e9190611405565b90506001600160a01b038616610ba65760405162461bcd60e51b815260206004820152600560248201527f322d30303900000000000000000000000000000000000000000000000000000060448201526064016104d9565b80516001600160a01b03878116911614801590610bd9575080604001516001600160a01b0316866001600160a01b031614155b610c255760405162461bcd60e51b815260206004820152600560248201527f322d30313000000000000000000000000000000000000000000000000000000060448201526064016104d9565b8154600160b81b900460ff161580610c4657508154600160b01b900460ff16155b610c925760405162461bcd60e51b815260206004820152600560248201527f322d30303600000000000000000000000000000000000000000000000000000060448201526064016104d9565b6101408101516127109061ffff8716906003602002015161ffff168360a00151610cbc9190611817565b610cc69190611817565b10610cfb5760405162461bcd60e51b8152602060048201526005602482015264322d30303760d81b60448201526064016104d9565b81546001600160a01b0387167fffffffffffffffffffff0000000000000000000000000000000000000000000090911617600160a01b61ffff871602178255610d52813390516001600160a01b0390811691161490565b15610d6e57815461ffff60b01b1916600160b81b178255610d96565b60408101516001600160a01b0316331415610d9657815461ffff60b01b1916600160b01b1782555b604080516001600160a01b038816815261ffff87166020820152339181019190915287907fbf42827f17777ed92b098fa9e5f6823ecb5c116e3b23909cc242530b1784dbbc906060015b60405180910390a250505050505050565b8233610dfd8282611127565b610e315760405162461bcd60e51b81526020600482015260056024820152640c8b4c0c0d60da1b60448201526064016104d9565b6000610e3c86610280565b604051633e8cf2cb60e11b8152600481018890529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637d19e596906024016102006040518083038186803b158015610ea357600080fd5b505afa158015610eb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edb9190611405565b82519091506001600160a01b0316610f1d5760405162461bcd60e51b81526020600482015260056024820152640645a6060760db1b60448201526064016104d9565b81516001600160a01b03878116911614610f615760405162461bcd60e51b81526020600482015260056024820152640645a6060760db1b60448201526064016104d9565b816020015161ffff168561ffff1614610fa45760405162461bcd60e51b8152602060048201526005602482015264322d30303760d81b60448201526064016104d9565b80516001600160a01b031633141561102b57606082015115610ff05760405162461bcd60e51b8152602060048201526005602482015264322d30303360d81b60448201526064016104d9565b600087815260016020526040902080547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b1790555b60408101516001600160a01b03163314156110b55760408201511561107a5760405162461bcd60e51b8152602060048201526005602482015264322d30303360d81b60448201526064016104d9565b600087815260016020526040902080547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b1790555b8151602083015160405189927fd514ca74d69a194b5d9455914d0d20ef96d29b6177b241c9d5f608264055199c92610de0926001600160a01b0392909216825261ffff16602082015260400190565b6000808260010b121561111f5761111a82611887565b611121565b815b92915050565b604051633e8cf2cb60e11b81526004810183905260009081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637d19e596906024016102006040518083038186803b15801561118d57600080fd5b505afa1580156111a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c59190611405565b9050826001600160a01b031681600001516001600160a01b031614806112005750826001600160a01b031681604001516001600160a01b0316145b949350505050565b6040518060a001604052806005906020820280368337509192915050565b8051611231816118d5565b919050565b600082601f83011261124757600080fd5b6040516040810181811067ffffffffffffffff8211171561126a5761126a6118bf565b806040525080838560408601111561128157600080fd5b6000805b60028110156112b35782518060010b811461129e578283fd5b84526020938401939290920191600101611285565b50929695505050505050565b600082601f8301126112d057600080fd5b6040516080810181811067ffffffffffffffff821117156112f3576112f36118bf565b60405280836080810186101561130857600080fd5b60005b600481101561133457815161131f816118ed565b8352602092830192919091019060010161130b565b509195945050505050565b8051611231816118ed565b805167ffffffffffffffff8116811461123157600080fd5b600060a0828403121561137457600080fd5b8260a08301111561138457600080fd5b50919050565b600060a0828403121561139c57600080fd5b82601f8301126113ab57600080fd5b60405160a0810181811067ffffffffffffffff821117156113ce576113ce6118bf565b604052808360a081018610156113e357600080fd5b60005b60058110156113345781518352602092830192909101906001016113e6565b6000610200828403121561141857600080fd5b611420611782565b61142983611226565b81526114376020840161134a565b602082015261144860408401611226565b60408201526114596060840161134a565b606082015261146a60808401611226565b608082015260a083015160a082015261148560c0840161134a565b60c082015261149660e08401611226565b60e08201526101006114a981850161133f565b908201526101206114bc85858301611236565b908201526101606114cf858583016112bf565b6101408301526101e084015181830152508091505092915050565b6000602082840312156114fc57600080fd5b8135611507816118ed565b9392505050565b60006020828403121561152057600080fd5b5035919050565b60008060006060848603121561153c57600080fd5b83359250602084013561154e816118d5565b9150604084013561155e816118ed565b809150509250925092565b6000806060838503121561157c57600080fd5b823591508360608401111561159057600080fd5b50926020919091019150565b8060005b60028110156115c2578151600190810b855260209485019490920191016115a0565b50505050565b8060005b60048110156115c257815161ffff168452602093840193909101906001016115cc565b8060005b60058110156115c25781518452602093840193909101906001016115f3565b60a08101818360005b600581101561163e57815161ffff1683526020928301929091019060010161161b565b50505092915050565b83516001600160a01b031681526102c081016020850151611674602084018267ffffffffffffffff169052565b50604085015161168f60408401826001600160a01b03169052565b5060608501516116ab606084018267ffffffffffffffff169052565b5060808501516116c660808401826001600160a01b03169052565b5060a085015160a083015260c08501516116ec60c084018267ffffffffffffffff169052565b5060e085015161170760e08401826001600160a01b03169052565b506101008581015161ffff16908301526101208086015161172a8285018261159c565b5050610140850151610160611741818501836115c8565b8601516101e08401525061020082018490526112006102208301846115ef565b83815260e0810161177560208301856115c8565b61120060a083018461159c565b604051610180810167ffffffffffffffff811182821017156117a6576117a66118bf565b60405290565b60008160010b8360010b6000821282617fff038213811516156117d1576117d16118a9565b82617fff190382128116156117e8576117e86118a9565b50019392505050565b600061ffff80831681851680830382111561180e5761180e6118a9565b01949350505050565b6000821982111561182a5761182a6118a9565b500190565b60008261184c57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561186b5761186b6118a9565b500290565b600082821015611882576118826118a9565b500390565b60008160010b617fff198114156118a0576118a06118a9565b60000392915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146118ea57600080fd5b50565b61ffff811681146118ea57600080fdfea26469706673582212204c16672b65f7ada3cbf8a0d226af782f701748b77b23bf981ad80327f1fe910364736f6c63430008070033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "unicrow_";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "unicrowClaim_";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "escrowId";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "buyer";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "challengeExtension";
                readonly type: "uint64";
            }, {
                readonly internalType: "address";
                readonly name: "seller";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "challengePeriodStart";
                readonly type: "uint64";
            }, {
                readonly internalType: "address";
                readonly name: "marketplace";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "marketplaceFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint64";
                readonly name: "challengePeriodEnd";
                readonly type: "uint64";
            }, {
                readonly internalType: "address";
                readonly name: "currency";
                readonly type: "address";
            }, {
                readonly internalType: "uint16";
                readonly name: "claimed";
                readonly type: "uint16";
            }, {
                readonly internalType: "int16[2]";
                readonly name: "consensus";
                readonly type: "int16[2]";
            }, {
                readonly internalType: "uint16[4]";
                readonly name: "split";
                readonly type: "uint16[4]";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly indexed: false;
            readonly internalType: "struct Escrow";
            readonly name: "escrow";
            readonly type: "tuple";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "blockTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256[5]";
            readonly name: "amounts";
            readonly type: "uint256[5]";
        }];
        readonly name: "Arbitrated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "escrowId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "arbitrator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "arbitratorFee";
            readonly type: "uint256";
        }];
        readonly name: "ArbitratorApproved";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "escrowId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "arbitrator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "arbitratorFee";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "proposer";
            readonly type: "address";
        }];
        readonly name: "ArbitratorProposed";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "escrowId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "validationAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "validation";
            readonly type: "uint16";
        }];
        readonly name: "approveArbitrator";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "escrowId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16[2]";
            readonly name: "newSplit";
            readonly type: "uint16[2]";
        }];
        readonly name: "arbitrate";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16[5]";
            readonly name: "currentSplit";
            readonly type: "uint16[5]";
        }];
        readonly name: "arbitrationCalculation";
        readonly outputs: readonly [{
            readonly internalType: "uint16[5]";
            readonly name: "";
            readonly type: "uint16[5]";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "escrowArbitrator";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "arbitrator";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "arbitratorFee";
            readonly type: "uint16";
        }, {
            readonly internalType: "bool";
            readonly name: "sellerConsensus";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "buyerConsensus";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "arbitrated";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "escrowId";
            readonly type: "uint256";
        }];
        readonly name: "getArbitratorData";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "arbitrator";
                readonly type: "address";
            }, {
                readonly internalType: "uint16";
                readonly name: "arbitratorFee";
                readonly type: "uint16";
            }, {
                readonly internalType: "bool";
                readonly name: "sellerConsensus";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "buyerConsensus";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "arbitrated";
                readonly type: "bool";
            }];
            readonly internalType: "struct Arbitrator";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "escrowId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "arbitrator";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "arbitratorFee";
            readonly type: "uint16";
        }];
        readonly name: "proposeArbitrator";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "escrowId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "arbitrator";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "arbitratorFee";
            readonly type: "uint16";
        }];
        readonly name: "setArbitrator";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "unicrow";
        readonly outputs: readonly [{
            readonly internalType: "contract Unicrow";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "unicrowClaim";
        readonly outputs: readonly [{
            readonly internalType: "contract IUnicrowClaim";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): UnicrowArbitratorInterface;
    static connect(address: string, runner?: ContractRunner | null): UnicrowArbitrator;
}
export {};
