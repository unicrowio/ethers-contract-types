"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Unicrow__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "unicrowClaim_",
                type: "address",
            },
            {
                internalType: "address",
                name: "unicrowArbitrator_",
                type: "address",
            },
            {
                internalType: "address",
                name: "unicrowDispute_",
                type: "address",
            },
            {
                internalType: "address",
                name: "governanceAddress_",
                type: "address",
            },
            {
                internalType: "uint16",
                name: "protocolFee_",
                type: "uint16",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "escrowId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "blockTime",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "buyer",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "challengeExtension",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "seller",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "challengePeriodStart",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "marketplace",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "marketplaceFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint64",
                        name: "challengePeriodEnd",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "uint16",
                        name: "claimed",
                        type: "uint16",
                    },
                    {
                        internalType: "int16[2]",
                        name: "consensus",
                        type: "int16[2]",
                    },
                    {
                        internalType: "uint16[4]",
                        name: "split",
                        type: "uint16[4]",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "paymentReference",
                        type: "string",
                    },
                ],
                indexed: false,
                internalType: "struct Escrow",
                name: "escrow",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "address",
                name: "arbitrator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "arbitratorFee",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "challengePeriod",
                type: "uint256",
            },
        ],
        name: "Pay",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "escrowId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "buyer",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "challengeExtension",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "seller",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "challengePeriodStart",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "marketplace",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "marketplaceFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint64",
                        name: "challengePeriodEnd",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "uint16",
                        name: "claimed",
                        type: "uint16",
                    },
                    {
                        internalType: "int16[2]",
                        name: "consensus",
                        type: "int16[2]",
                    },
                    {
                        internalType: "uint16[4]",
                        name: "split",
                        type: "uint16[4]",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "paymentReference",
                        type: "string",
                    },
                ],
                indexed: false,
                internalType: "struct Escrow",
                name: "escrow",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "blockTime",
                type: "uint256",
            },
        ],
        name: "Refund",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "escrowId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "blockTime",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "buyer",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "challengeExtension",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "seller",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "challengePeriodStart",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "marketplace",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "marketplaceFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint64",
                        name: "challengePeriodEnd",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "uint16",
                        name: "claimed",
                        type: "uint16",
                    },
                    {
                        internalType: "int16[2]",
                        name: "consensus",
                        type: "int16[2]",
                    },
                    {
                        internalType: "uint16[4]",
                        name: "split",
                        type: "uint16[4]",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "paymentReference",
                        type: "string",
                    },
                ],
                indexed: false,
                internalType: "struct Escrow",
                name: "escrow",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "uint256[5]",
                name: "amounts",
                type: "uint256[5]",
            },
        ],
        name: "Release",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "escrowId",
                type: "uint256",
            },
            {
                internalType: "uint16[4]",
                name: "split",
                type: "uint16[4]",
            },
            {
                internalType: "int16[2]",
                name: "consensus",
                type: "int16[2]",
            },
            {
                internalType: "uint64",
                name: "challengeStart",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "challengeEnd",
                type: "uint64",
            },
        ],
        name: "challenge",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "escrowIdCounter",
        outputs: [
            {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "escrowId",
                type: "uint256",
            },
        ],
        name: "getAllEscrowData",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "buyer",
                                type: "address",
                            },
                            {
                                internalType: "uint64",
                                name: "challengeExtension",
                                type: "uint64",
                            },
                            {
                                internalType: "address",
                                name: "seller",
                                type: "address",
                            },
                            {
                                internalType: "uint64",
                                name: "challengePeriodStart",
                                type: "uint64",
                            },
                            {
                                internalType: "address",
                                name: "marketplace",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "marketplaceFee",
                                type: "uint256",
                            },
                            {
                                internalType: "uint64",
                                name: "challengePeriodEnd",
                                type: "uint64",
                            },
                            {
                                internalType: "address",
                                name: "currency",
                                type: "address",
                            },
                            {
                                internalType: "uint16",
                                name: "claimed",
                                type: "uint16",
                            },
                            {
                                internalType: "int16[2]",
                                name: "consensus",
                                type: "int16[2]",
                            },
                            {
                                internalType: "uint16[4]",
                                name: "split",
                                type: "uint16[4]",
                            },
                            {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256",
                            },
                            {
                                internalType: "string",
                                name: "paymentReference",
                                type: "string",
                            },
                        ],
                        internalType: "struct Escrow",
                        name: "escrow",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "arbitrator",
                                type: "address",
                            },
                            {
                                internalType: "uint16",
                                name: "arbitratorFee",
                                type: "uint16",
                            },
                            {
                                internalType: "bool",
                                name: "sellerConsensus",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "buyerConsensus",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "arbitrated",
                                type: "bool",
                            },
                        ],
                        internalType: "struct Arbitrator",
                        name: "arbitrator",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "latestSettlementOfferBy",
                                type: "address",
                            },
                            {
                                internalType: "uint16[2]",
                                name: "latestSettlementOffer",
                                type: "uint16[2]",
                            },
                        ],
                        internalType: "struct Settlement",
                        name: "settlement",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "address_",
                                type: "address",
                            },
                            {
                                internalType: "uint8",
                                name: "decimals",
                                type: "uint8",
                            },
                            {
                                internalType: "string",
                                name: "symbol",
                                type: "string",
                            },
                        ],
                        internalType: "struct Token",
                        name: "token",
                        type: "tuple",
                    },
                ],
                internalType: "struct Data",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "escrowId",
                type: "uint256",
            },
        ],
        name: "getEscrow",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "buyer",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "challengeExtension",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "seller",
                        type: "address",
                    },
                    {
                        internalType: "uint64",
                        name: "challengePeriodStart",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "marketplace",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "marketplaceFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint64",
                        name: "challengePeriodEnd",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "uint16",
                        name: "claimed",
                        type: "uint16",
                    },
                    {
                        internalType: "int16[2]",
                        name: "consensus",
                        type: "int16[2]",
                    },
                    {
                        internalType: "uint16[4]",
                        name: "split",
                        type: "uint16[4]",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "paymentReference",
                        type: "string",
                    },
                ],
                internalType: "struct Escrow",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "governanceAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "buyer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "seller",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "marketplace",
                        type: "address",
                    },
                    {
                        internalType: "uint16",
                        name: "marketplaceFee",
                        type: "uint16",
                    },
                    {
                        internalType: "address",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "uint32",
                        name: "challengePeriod",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "challengeExtension",
                        type: "uint32",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "paymentReference",
                        type: "string",
                    },
                ],
                internalType: "struct EscrowInput",
                name: "input",
                type: "tuple",
            },
            {
                internalType: "address",
                name: "arbitrator",
                type: "address",
            },
            {
                internalType: "uint16",
                name: "arbitratorFee",
                type: "uint16",
            },
        ],
        name: "pay",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "protocolFee",
        outputs: [
            {
                internalType: "uint16",
                name: "",
                type: "uint16",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "escrowId",
                type: "uint256",
            },
        ],
        name: "refund",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "escrowId",
                type: "uint256",
            },
        ],
        name: "release",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "currency",
                type: "address",
            },
        ],
        name: "sendEscrowShare",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "escrowId",
                type: "uint256",
            },
        ],
        name: "setClaimed",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "escrowId",
                type: "uint256",
            },
            {
                internalType: "uint16[4]",
                name: "split",
                type: "uint16[4]",
            },
            {
                internalType: "int16[2]",
                name: "consensus",
                type: "int16[2]",
            },
        ],
        name: "settle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint16[5]",
                name: "currentSplit",
                type: "uint16[5]",
            },
        ],
        name: "splitCalculation",
        outputs: [
            {
                internalType: "uint16[5]",
                name: "",
                type: "uint16[5]",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "unicrowArbitrator",
        outputs: [
            {
                internalType: "contract IUnicrowArbitrator",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "unicrowClaim",
        outputs: [
            {
                internalType: "contract IUnicrowClaim",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "unicrowDispute",
        outputs: [
            {
                internalType: "contract UnicrowDispute",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint16",
                name: "fee",
                type: "uint16",
            },
        ],
        name: "updateEscrowFee",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "governance",
                type: "address",
            },
        ],
        name: "updateGovernance",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60e06040523480156200001157600080fd5b50604051620038e1380380620038e18339810160408190526200003491620000d2565b60016000819055606085811b6001600160601b031990811660805287821b811660a0529085901b1660c052600280546001600160b01b031916620100006001600160a01b0386160261ffff19161761ffff8416179055620000a190620000ac602090811b6200248117901c565b50505050506200014c565b80546001019055565b80516001600160a01b0381168114620000cd57600080fd5b919050565b600080600080600060a08688031215620000eb57600080fd5b620000f686620000b5565b94506200010660208701620000b5565b93506200011660408701620000b5565b92506200012660608701620000b5565b9150608086015161ffff811681146200013e57600080fd5b809150509295509295909350565b60805160601c60a05160601c60c05160601c613716620001cb6000396000818161029e015281816103ff015281816118e301526121260152600081816103da01528181610ddf01528181611bf601526123ce0152600081816101df015281816107300152818161149f015281816118b1015261206701526137166000f3fe6080604052600436106101295760003560e01c80637f5d4285116100a5578063b256126311610074578063d25dd97511610059578063d25dd9751461037b578063e7aa0bd7146103a8578063e9db7d79146103c857600080fd5b8063b25612631461032e578063d02f411e1461034e57600080fd5b80637f5d42851461028c5780638b0473b4146102c05780638ede1f05146102e0578063b0e21e8a1461030057600080fd5b80633f2db037116100fc57806364166e63116100e157806364166e6314610219578063795053d3146102395780637d19e5961461025f57600080fd5b80633f2db037146101ba57806349c4920f146101cd57600080fd5b80630a6b25f21461012e578063278ecde11461015057806334d844d81461017057806337bdc99b1461019a575b600080fd5b34801561013a57600080fd5b5061014e610149366004613003565b6103fc565b005b34801561015c57600080fd5b5061014e61016b366004612f93565b6104d5565b34801561017c57600080fd5b506001546101879081565b6040519081526020015b60405180910390f35b3480156101a657600080fd5b5061014e6101b5366004612f93565b610adf565b6101876101c8366004612e6b565b610ea7565b3480156101d957600080fd5b506102017f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610191565b34801561022557600080fd5b5061014e610234366004612fc5565b6118ae565b34801561024557600080fd5b50600254610201906201000090046001600160a01b031681565b34801561026b57600080fd5b5061027f61027a366004612f93565b611957565b60405161019191906133c9565b34801561029857600080fd5b506102017f000000000000000000000000000000000000000000000000000000000000000081565b3480156102cc57600080fd5b5061014e6102db366004612f76565b611b60565b3480156102ec57600080fd5b5061014e6102fb366004612c2c565b611bf3565b34801561030c57600080fd5b5060025461031b9061ffff1681565b60405161ffff9091168152602001610191565b34801561033a57600080fd5b5061014e610349366004612c0f565b611ca1565b34801561035a57600080fd5b5061036e610369366004612c6e565b611d07565b60405161019191906132e1565b34801561038757600080fd5b5061039b610396366004612f93565b611ea7565b6040516101919190613329565b3480156103b457600080fd5b5061014e6103c3366004612f93565b6123cb565b3480156103d457600080fd5b506102017f000000000000000000000000000000000000000000000000000000000000000081565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461043157600080fd5b600085815260036020526040902061044e90600601856004612826565b50600085815260036020526040902061046c906005018460026128c0565b506000948552600360205260409094206001810180547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff94851602179055600401805467ffffffffffffffff191691909416179092555050565b6002600054141561052d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600081815582815260036020818152604080842081516101a08101835281546001600160a01b038082168352600160a01b9182900467ffffffffffffffff90811696840196909652600184015480821684870152919091048516606083015282880154811660808301529482015460a0820152600482015493841660c082015268010000000000000000840490941660e0850152600160e01b90920461ffff1661010084015280518082019182905233956101208501926005850191908288855b82829054906101000a900460010b60010b815260200190600201906020826001010492830192600103820291508084116105f057505050928452505060408051608081019182905260209093019291506006840190600490826000855b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161064d57905050505050508152602001600782015481526020016008820180546106a890613635565b80601f01602080910402602001604051908101604052809291908181526020018280546106d490613635565b80156107215780601f106106f657610100808354040283529160200191610721565b820191906000526020600020905b81548152906001019060200180831161070457829003601f168201915b505050505081525050905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166316e0551b856040518263ffffffff1660e01b815260040161077c91815260200190565b60a06040518083038186803b15801561079457600080fd5b505afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc9190612dd9565b905081604001516001600160a01b0316836001600160a01b03161480610807575081604001516001600160a01b0316326001600160a01b0316145b8061081e575080516001600160a01b038481169116145b80610832575080516001600160a01b031632145b61087e5760405162461bcd60e51b815260206004820152600560248201527f312d3031310000000000000000000000000000000000000000000000000000006044820152606401610524565b61010082015161ffff16156108d55760405162461bcd60e51b815260206004820152600560248201527f302d3030350000000000000000000000000000000000000000000000000000006044820152606401610524565b61014082018051612710905280516000602090910181905281516040018190529051606001819052610120830151610912915b602002015161248a565b61091d90600161350b565b61012083018051600192830b830b90525161093791610908565b610120830151600191820b90910b60209182015261014083015160008681526003909252604090912061097191600690910190600461291c565b506101208201516000858152600360205260409020610997916005909101906002612972565b506000848152600360205260409020600401805461ffff60e01b1916600160e01b179055600161010083015260e08201516001600160a01b0316610a825781516101608301516040516000926001600160a01b031691908381818185875af1925050503d8060008114610a26576040519150601f19603f3d011682016040523d82523d6000602084013e610a2b565b606091505b5050905080610a7c5760405162461bcd60e51b815260206004820152600560248201527f312d3031320000000000000000000000000000000000000000000000000000006044820152606401610524565b50610a9a565b610a9a8260e0015183600001518461016001516124ad565b837f1ec8ac2428b647686d37ee1aee5009f337cf5f0b7c5709b547b4461c50b45a248342604051610acc9291906133dc565b60405180910390a2505060016000555050565b600081815260036020818152604080842081516101a08101835281546001600160a01b038082168352600160a01b9182900467ffffffffffffffff908116968401969096526001840154808216848701529190910485166060830152600280840154821660808401529583015460a0830152600483015494851660c08301526801000000000000000085041660e0820152600160e01b90930461ffff16610100840152815180830192839052339594919261012085019260058501918288855b82829054906101000a900460010b60010b81526020019060020190602082600101049283019260010382029150808411610b9f57505050928452505060408051608081019182905260209093019291506006840190600490826000855b82829054906101000a900461ffff1661ffff1681526020019060020190602082600101049283019260010382029150808411610bfc5790505050505050815260200160078201548152602001600882018054610c5790613635565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8390613635565b8015610cd05780601f10610ca557610100808354040283529160200191610cd0565b820191906000526020600020905b815481529060010190602001808311610cb357829003601f168201915b505050505081525050905080600001516001600160a01b0316826001600160a01b031614610d405760405162461bcd60e51b815260206004820152600560248201527f312d3032350000000000000000000000000000000000000000000000000000006044820152606401610524565b610120810151610d51906000610908565b610d5c90600161350b565b61012082018051600192830b830b905251610d7691610908565b61012082018051600192830b90920b60209283015251600085815260039092526040909120610dac916005909101906002612972565b506040517f379607f5000000000000000000000000000000000000000000000000000000008152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063379607f59060240160a060405180830381600087803b158015610e2b57600080fd5b505af1158015610e3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e639190612c96565b9050837f2b68cbe2d13ab71dfaebca786cc9fdbbe99b2da6531ab8fe2aaf88edf13391c7428484604051610e9993929190613447565b60405180910390a250505050565b600060026000541415610efc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610524565b600260009081556001549080610f156020880188612c0f565b6001600160a01b031614610f3557610f306020870187612c0f565b610f37565b335b60025490915060e0870135906127109061ffff16610f5b60808a0160608b01612f76565b610f659088613550565b610f6f9190613550565b61ffff1610610fc05760405162461bcd60e51b815260206004820152600560248201527f312d3032360000000000000000000000000000000000000000000000000000006044820152606401610524565b6000838152600360205260409020546001600160a01b0316156110255760405162461bcd60e51b815260206004820152600560248201527f302d3030310000000000000000000000000000000000000000000000000000006044820152606401610524565b60006110376040890160208a01612c0f565b6001600160a01b0316141561108e5760405162461bcd60e51b815260206004820152600560248201527f302d3030320000000000000000000000000000000000000000000000000000006044820152606401610524565b61109e6040880160208901612c0f565b6001600160a01b0316826001600160a01b031614156110ff5760405162461bcd60e51b815260206004820152600560248201527f302d3030330000000000000000000000000000000000000000000000000000006044820152606401610524565b6000811161114f5760405162461bcd60e51b815260206004820152600560248201527f302d3031310000000000000000000000000000000000000000000000000000006044820152606401610524565b34156111bd57600061116760a0890160808a01612c0f565b6001600160a01b0316146111bd5760405162461bcd60e51b815260206004820152600560248201527f302d3031300000000000000000000000000000000000000000000000000000006044820152606401610524565b60006111cf60a0890160808a01612c0f565b6001600160a01b031614156111ef573481146111ea57600080fd5b611333565b600061120160a0890160808a01612c0f565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b15801561124257600080fd5b505afa158015611256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127a9190612fac565b905061129761128f60a08a0160808b01612c0f565b333085612556565b60006112a960a08a0160808b01612c0f565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156112ea57600080fd5b505afa1580156112fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113229190612fac565b905061132e82826135f2565b925050505b60006113456080890160608a01612f76565b61ffff1611156113b85760006113616060890160408a01612c0f565b6001600160a01b031614156113b85760405162461bcd60e51b815260206004820152600560248201527f302d3030390000000000000000000000000000000000000000000000000000006044820152606401610524565b6001600160a01b038616156114fc57816001600160a01b0316866001600160a01b03161415801561140a57506113f46040880160208901612c0f565b6001600160a01b0316866001600160a01b031614155b6114565760405162461bcd60e51b815260206004820152600560248201527f312d3032370000000000000000000000000000000000000000000000000000006044820152606401610524565b6040517f2ea8eddd000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b03878116602483015261ffff871660448301527f00000000000000000000000000000000000000000000000000000000000000001690632ea8eddd90606401600060405180830381600087803b1580156114e357600080fd5b505af11580156114f7573d6000803e3d6000fd5b505050505b60408051608080820183526000808352612710602084015292820190611527908b0160608c01612f76565b61ffff908116825260025416602091820152604080518082018252600080825260018285015282516101a081019093526001600160a01b0388168352939450929181018261157b60e08e0160c08f01613065565b63ffffffff161161159b5761159660c08d0160a08e01613065565b6115ab565b6115ab60e08d0160c08e01613065565b63ffffffff1681526020908101906115c99060408e01908e01612c0f565b6001600160a01b031681526020014267ffffffffffffffff1681526020018b60400160208101906115fa9190612c0f565b6001600160a01b0316815260200161161860808d0160608e01612f76565b61ffff16815260200161163160c08d0160a08e01613065565b6116419063ffffffff1642613576565b67ffffffffffffffff16815260200161166060a08d0160808e01612c0f565b6001600160a01b031681526000602082015260408101849052606081018590526080810186905260a0016116986101008d018d613494565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508881526003602081815260409283902085518154928701516001600160a01b039182167fffffffff0000000000000000000000000000000000000000000000000000000094851617600160a01b67ffffffffffffffff92831681029190911784559588015160018401805460608b015192851690871617918316909702179095556080870151600280840180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169284169290921790915560a08801519483019490945560c087015160048301805460e08a01516101008b0151939098169516949094176801000000000000000096909216959095021761ffff60e01b1916600160e01b61ffff9095169490940293909317905561012084015193945084939192506117ff916005840191612972565b50610140820151611816906006830190600461291c565b506101608201516007820155610180820151805161183e9160088401916020909101906129cb565b5050600180548101905550857f4175a6fc82ba411dc8ef77e26b517727e5c1a6c47eca1528ae01dc17f4b54a1d42838c8c8f60a00160208101906118829190613065565b6040516118939594939291906133fe565b60405180910390a25050600160005550919695505050505050565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148061190d5750337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316145b61191657600080fd5b600083815260036020526040902061193390600601836004612826565b506000838152600360205260409020611951906005018260026128c0565b50505050565b61195f612a3f565b600082815260036020818152604080842081516101a08101835281546001600160a01b038082168352600160a01b9182900467ffffffffffffffff908116968401969096526001840154808216848701529190910485166060830152600280840154821660808401529583015460a0830152600483015494851660c08301526801000000000000000085041660e0820152600160e01b90930461ffff16610100840152815180830192839052929490936101208601939260058601928390855b82829054906101000a900460010b60010b81526020019060020190602082600101049283019260010382029150808411611a1f57505050928452505060408051608081019182905260209093019291506006840190600490826000855b82829054906101000a900461ffff1661ffff1681526020019060020190602082600101049283019260010382029150808411611a7c5790505050505050815260200160078201548152602001600882018054611ad790613635565b80601f0160208091040260200160405190810160405280929190818152602001828054611b0390613635565b8015611b505780601f10611b2557610100808354040283529160200191611b50565b820191906000526020600020905b815481529060010190602001808311611b3357829003601f168201915b5050505050815250509050919050565b6002546201000090046001600160a01b0316336001600160a01b031614611b8657600080fd5b60648161ffff161115611bdb5760405162461bcd60e51b815260206004820152600560248201527f302d3030380000000000000000000000000000000000000000000000000000006044820152606401610524565b6002805461ffff191661ffff92909216919091179055565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614611c2857600080fd5b6001600160a01b038116611c91576040516001600160a01b038416906113889084906000818181858888f193505050503d8060008114611c84576040519150601f19603f3d011682016040523d82523d6000602084013e611c89565b606091505b505050505050565b611c9c8184846124ad565b505050565b6002546201000090046001600160a01b0316336001600160a01b031614611cc757600080fd5b600280546001600160a01b0390921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b611d0f612ab6565b611d17612ab6565b600080611d2a6080860160608701612f76565b61ffff161115611d7d57612710611d476040860160208701612f76565b61ffff16611d5b6080870160608801612f76565b61ffff16611d6991906135b0565b611d73919061358e565b61ffff1660608301525b6000611d8f6060860160408701612f76565b61ffff161115611de257612710611dac6040860160208701612f76565b61ffff16611dc06060870160408801612f76565b61ffff16611dce91906135b0565b611dd8919061358e565b61ffff1660408301525b6000611df460a0860160808701612f76565b61ffff161115611e4057612710611e116040860160208701612f76565b61ffff16611e2560a0870160808801612f76565b61ffff16611e3391906135b0565b611e3d919061358e565b90505b60408083015160608401518392611e5c90880160208901612f76565b611e6691906135cf565b611e7091906135cf565b611e7a91906135cf565b61ffff16602080840191909152611e9390850185612f76565b61ffff908116835216608082015292915050565b611eaf612ad4565b6000828152600360209081526040808320600401548151606081019092526801000000000000000090046001600160a01b0316808252929181018315611f6557836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611f2857600080fd5b505afa158015611f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f60919061308b565b611f68565b60125b60ff1681526020016001600160a01b03841615611ff957836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015611fb857600080fd5b505afa158015611fcc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ff49190810190612d37565b612030565b6040518060400160405280600381526020017f45544800000000000000000000000000000000000000000000000000000000008152505b90526040517f16e0551b000000000000000000000000000000000000000000000000000000008152600481018690529091506000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906316e0551b9060240160a06040518083038186803b1580156120b157600080fd5b505afa1580156120c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e99190612dd9565b6040517ffe5e2969000000000000000000000000000000000000000000000000000000008152600481018790529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063fe5e29699060240160606040518083038186803b15801561216857600080fd5b505afa15801561217c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121a09190612eca565b604080516000898152600360208190528382206102208401855280546001600160a01b0380821660808701908152600160a01b9283900467ffffffffffffffff90811660a0890152600185015480841660c08a015293909304831660e08801526002808501548316610100890152948401546101208801526004840154928316610140880152680100000000000000008304909116610160870152600160e01b90910461ffff166101808601528551808701968790529697509395869591936101a087019391926005860192918390855b82829054906101000a900460010b60010b8152602001906002019060208260010104928301926001038202915080841161227157505050928452505060408051608081019182905260209093019291506006840190600490826000855b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116122ce579050505050505081526020016007820154815260200160088201805461232990613635565b80601f016020809104026020016040519081016040528092919081815260200182805461235590613635565b80156123a25780601f10612377576101008083540402835291602001916123a2565b820191906000526020600020905b81548152906001019060200180831161238557829003601f168201915b505050505081525050815260200183815260200182815260200184815250945050505050919050565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461240057600080fd5b600260005414156124535760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610524565b60026000908155908152600360205260408120600401805461ffff60e01b1916600160e01b17905560019055565b80546001019055565b6000808260010b12156124a5576124a08261366a565b6124a7565b815b92915050565b6040516001600160a01b038316602482015260448101829052611c9c9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526125a7565b6040516001600160a01b03808516602483015283166044820152606481018290526119519085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016124f2565b60006125fc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661268c9092919063ffffffff16565b805190915015611c9c578080602001905181019061261a9190612d1c565b611c9c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610524565b606061269b84846000856126a5565b90505b9392505050565b60608247101561271d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610524565b6001600160a01b0385163b6127745760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610524565b600080866001600160a01b0316858760405161279091906132c5565b60006040518083038185875af1925050503d80600081146127cd576040519150601f19603f3d011682016040523d82523d6000602084013e6127d2565b606091505b50915091506127e28282866127ed565b979650505050505050565b606083156127fc57508161269e565b82511561280c5782518084602001fd5b8160405162461bcd60e51b81526004016105249190613316565b6001830191839082156128b05791602002820160005b8382111561288057833561ffff1683826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030261283c565b80156128ae5782816101000a81549061ffff0219169055600201602081600101049283019260010302612880565b505b506128bc929150612b4c565b5090565b6001830191839082156128b05791602002820160005b8382111561288057833560010b83826101000a81548161ffff021916908360010b61ffff16021790555092602001926002016020816001010492830192600103026128d6565b6001830191839082156128b05791602002820160005b8382111561288057835183826101000a81548161ffff021916908361ffff1602179055509260200192600201602081600101049283019260010302612932565b6001830191839082156128b05791602002820160005b8382111561288057835183826101000a81548161ffff021916908360010b61ffff1602179055509260200192600201602081600101049283019260010302612988565b8280546129d790613635565b90600052602060002090601f0160209004810192826129f957600085556128b0565b82601f10612a1257805160ff19168380011785556128b0565b828001600101855582156128b0579182015b828111156128b0578251825591602001919060010190612a24565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101919091526101208101612a95612b61565b8152602001612aa2612b7f565b815260200160008152602001606081525090565b6040518060a001604052806005906020820280368337509192915050565b6040518060800160405280612ae7612a3f565b81526040805160a081018252600080825260208281018290529282018190526060820181905260808201529101908152602001612b22612b9d565b8152604080516060808201835260008083526020838101919091529282015291015290565b905290565b5b808211156128bc5760008155600101612b4d565b60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806040016040528060006001600160a01b03168152602001612b47612b61565b80604081018310156124a757600080fd5b80608081018310156124a757600080fd5b80518015158114612bf257600080fd5b919050565b803567ffffffffffffffff81168114612bf257600080fd5b600060208284031215612c2157600080fd5b813561269e816136b8565b600080600060608486031215612c4157600080fd5b8335612c4c816136b8565b9250602084013591506040840135612c63816136b8565b809150509250925092565b600060a08284031215612c8057600080fd5b8260a083011115612c9057600080fd5b50919050565b600060a08284031215612ca857600080fd5b82601f830112612cb757600080fd5b60405160a0810181811067ffffffffffffffff82111715612cda57612cda6136a2565b604052808360a08101861015612cef57600080fd5b60005b6005811015612d11578151835260209283019290910190600101612cf2565b509195945050505050565b600060208284031215612d2e57600080fd5b61269e82612be2565b600060208284031215612d4957600080fd5b815167ffffffffffffffff80821115612d6157600080fd5b818401915084601f830112612d7557600080fd5b815181811115612d8757612d876136a2565b604051601f8201601f19908116603f01168101908382118183101715612daf57612daf6136a2565b81604052828152876020848701011115612dc857600080fd5b6127e2836020830160208801613609565b600060a08284031215612deb57600080fd5b60405160a0810181811067ffffffffffffffff82111715612e0e57612e0e6136a2565b6040528251612e1c816136b8565b81526020830151612e2c816136d0565b6020820152612e3d60408401612be2565b6040820152612e4e60608401612be2565b6060820152612e5f60808401612be2565b60808201529392505050565b600080600060608486031215612e8057600080fd5b833567ffffffffffffffff811115612e9757600080fd5b84016101208187031215612eaa57600080fd5b92506020840135612eba816136b8565b91506040840135612c63816136d0565b600060608284031215612edc57600080fd5b6040516040810181811067ffffffffffffffff82111715612eff57612eff6136a2565b6040528251612f0d816136b8565b81526020603f84018513612f2057600080fd5b612f286134e2565b8082860187606088011115612f3c57600080fd5b60005b6002811015612f65578151612f53816136d0565b84529284019290840190600101612f3f565b505091830191909152509392505050565b600060208284031215612f8857600080fd5b813561269e816136d0565b600060208284031215612fa557600080fd5b5035919050565b600060208284031215612fbe57600080fd5b5051919050565b600080600060e08486031215612fda57600080fd5b83359250612feb8560208601612bd1565b9150612ffa8560a08601612bc0565b90509250925092565b6000806000806000610120868803121561301c57600080fd5b8535945061302d8760208801612bd1565b935061303c8760a08801612bc0565b925061304a60e08701612bf7565b91506130596101008701612bf7565b90509295509295909350565b60006020828403121561307757600080fd5b813563ffffffff8116811461269e57600080fd5b60006020828403121561309d57600080fd5b815160ff8116811461269e57600080fd5b8060005b6002811015611951578151600190810b855260209485019490920191016130b2565b8060005b600481101561195157815161ffff168452602093840193909101906001016130d8565b60008151808452613113816020860160208601613609565b601f01601f19169290920160200192915050565b80516001600160a01b0316825260006102206020830151613154602086018267ffffffffffffffff169052565b50604083015161316f60408601826001600160a01b03169052565b50606083015161318b606086018267ffffffffffffffff169052565b5060808301516131a660808601826001600160a01b03169052565b5060a083015160a085015260c08301516131cc60c086018267ffffffffffffffff169052565b5060e08301516131e760e08601826001600160a01b03169052565b506101008381015161ffff16908501526101208084015161320a828701826130ae565b5050610140830151610160613221818701836130d4565b8401516101e0860152506101808301516102008501829052613245828601826130fb565b95945050505050565b6001600160a01b03815116825260208082015181840160005b6002811015611c8957825161ffff1682529183019190830190600101613267565b6001600160a01b03815116825260ff602082015116602083015260006040820151606060408501526132bd60608501826130fb565b949350505050565b600082516132d7818460208701613609565b9190910192915050565b60a08101818360005b600581101561330d57815161ffff168352602092830192909101906001016132ea565b50505092915050565b60208152600061269e60208301846130fb565b6020815260008251610140806020850152613348610160850183613127565b915060208501516001600160a01b03815116604086015261ffff60208201511660608601526040810151151560808601526060810151151560a08601526080810151151560c08601525060408501516133a460e086018261324e565b506060850151848303601f1901828601526133bf8382613288565b9695505050505050565b60208152600061269e6020830184613127565b6040815260006133ef6040830185613127565b90508260208301529392505050565b85815260a06020820152600061341760a0830187613127565b6001600160a01b039590951660408301525061ffff92909216606083015263ffffffff1660809091015292915050565b8381526000602060e08184015261346160e0840186613127565b9150604083018460005b60058110156134885781518352918301919083019060010161346b565b50505050949350505050565b6000808335601e198436030181126134ab57600080fd5b83018035915067ffffffffffffffff8211156134c657600080fd5b6020019150368190038213156134db57600080fd5b9250929050565b6040805190810167ffffffffffffffff81118282101715613505576135056136a2565b60405290565b60008160010b8360010b6000821282617fff038213811516156135305761353061368c565b82617fff190382128116156135475761354761368c565b50019392505050565b600061ffff80831681851680830382111561356d5761356d61368c565b01949350505050565b600082198211156135895761358961368c565b500190565b6000826135ab57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156135ca576135ca61368c565b500290565b600061ffff838116908316818110156135ea576135ea61368c565b039392505050565b6000828210156136045761360461368c565b500390565b60005b8381101561362457818101518382015260200161360c565b838111156119515750506000910152565b600181811c9082168061364957607f821691505b60208210811415612c9057634e487b7160e01b600052602260045260246000fd5b60008160010b617fff198114156136835761368361368c565b60000392915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146136cd57600080fd5b50565b61ffff811681146136cd57600080fdfea2646970667358221220cb9dcd948bf25c05b2c9993c9089a9fd0bf265d98f0f9ea364a247270d2be4f764736f6c63430008070033";
const isSuperArgs = (xs) => xs.length > 1;
class Unicrow__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(unicrowClaim_, unicrowArbitrator_, unicrowDispute_, governanceAddress_, protocolFee_, overrides) {
        return super.getDeployTransaction(unicrowClaim_, unicrowArbitrator_, unicrowDispute_, governanceAddress_, protocolFee_, overrides || {});
    }
    deploy(unicrowClaim_, unicrowArbitrator_, unicrowDispute_, governanceAddress_, protocolFee_, overrides) {
        return super.deploy(unicrowClaim_, unicrowArbitrator_, unicrowDispute_, governanceAddress_, protocolFee_, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.Unicrow__factory = Unicrow__factory;
//# sourceMappingURL=Unicrow__factory.js.map